{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e305cb3b",
   "metadata": {},
   "source": [
    "### Table of Contents\n",
    "\n",
    "1. Data importing  \n",
    "2. Data checks and merging dataframes  \n",
    "3. PII privacy checks  \n",
    "4. Assign regions  \n",
    "5. Flag and exclude customers with less than 5 orders  \n",
    "\n",
    "\n",
    "6. Creating customer profile\n",
    " 6a. Age Profile  \n",
    " 6b. Parental Age Profile  \n",
    " 6c. Single Parent Profile (Dependants Profile)  \n",
    " 6d. Relationship-Age Profile  \n",
    " 6e. Income Profile   \n",
    " 6f. Gender Profile  \n",
    " 6g. Deparments Profiles - Alcohol, Baby items, International items    \n",
    " \n",
    " \n",
    "7. Creating an appropriate visualization to show the distribution of profiles\n",
    " 7a. Age Profile  \n",
    " 7b. Parental Age Profile  \n",
    " 7c. Single Parent Profile (Dependants Profile)  \n",
    " 7d. Relationship-Age Profile  \n",
    " 7e. Income Profile   \n",
    " 7f. Gender Profile  \n",
    " 7g. Deparments Profiles - Alcohol, Baby items, International items    \n",
    " \n",
    " \n",
    "8. Aggregating the max, mean, and min variables on a customer-profile level for usage frequency and expenditure  \n",
    " 8a. Age Profile  \n",
    " 8b. Parental Age Profile  \n",
    " 8c. Single Parent Profile (Dependants Profile)  \n",
    " 8d. Income Profile  \n",
    " 8e. Relationship-Age Profile   \n",
    " 8f. Gender Profile  \n",
    " 8g. Deparments Profiles - Alcohol, Baby items, International items \n",
    " \n",
    " \n",
    "9. Comparison Visualizations customer profiles with regions and departments  \n",
    " 9a. Region Distribution  \n",
    " 9b. Order Frequency Distribution  \n",
    " 9c. Price Range Distribution  \n",
    " \n",
    " \n",
    "10. Basic Visualisation  \n",
    " 10a. Departments  \n",
    " 10b. Product Price Ranges  \n",
    " 10c. Customer Loyalty  \n",
    " 10d. Customer Spending  \n",
    " 10e. Order Frequency  \n",
    " \n",
    " \n",
    "11. Exporting Final Dataset  \n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b267941",
   "metadata": {},
   "source": [
    "### 1. Data importing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1bdacaa1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:57:39.059237Z",
     "start_time": "2022-11-07T12:57:36.383137Z"
    }
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "30525ec8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:57:39.064446Z",
     "start_time": "2022-11-07T12:57:39.061834Z"
    }
   },
   "outputs": [],
   "source": [
    "# create path\n",
    "path = r'/Users/macbook/Library/CloudStorage/OneDrive-Personal/Data Analisys/Instacart'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ee8e33a9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.061818Z",
     "start_time": "2022-11-07T12:57:39.066731Z"
    }
   },
   "outputs": [],
   "source": [
    "# completely combined dataframe\n",
    "df = pd.read_pickle(os.path.join(path, '02 Data', 'Prepared Data', 'orders_products_combined_4.9_1.pkl'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51b8ba07",
   "metadata": {},
   "source": [
    "### 2. Data checks and merging dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e5454824",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.070889Z",
     "start_time": "2022-11-07T12:58:06.065063Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(32404859, 34)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "98137957",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.097710Z",
     "start_time": "2022-11-07T12:58:06.073772Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>...</th>\n",
       "      <th>frequency_flag</th>\n",
       "      <th>first_name</th>\n",
       "      <th>surnam</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2398795</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>473747</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>21.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2254736</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>29.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>431534</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>28.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   2398795        1    prior             2                   3   \n",
       "2    473747        1    prior             3                   3   \n",
       "3   2254736        1    prior             4                   4   \n",
       "4    431534        1    prior             5                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                  8                     NaN         196                  1   \n",
       "1                  7                    15.0         196                  1   \n",
       "2                 12                    21.0         196                  1   \n",
       "3                  7                    29.0         196                  1   \n",
       "4                 15                    28.0         196                  1   \n",
       "\n",
       "   reordered  ...         frequency_flag  first_name  surnam  gender    state  \\\n",
       "0          0  ...  Non-frequent customer       Linda  Nguyen  Female  Alabama   \n",
       "1          1  ...  Non-frequent customer       Linda  Nguyen  Female  Alabama   \n",
       "2          1  ...  Non-frequent customer       Linda  Nguyen  Female  Alabama   \n",
       "3          1  ...  Non-frequent customer       Linda  Nguyen  Female  Alabama   \n",
       "4          1  ...  Non-frequent customer       Linda  Nguyen  Female  Alabama   \n",
       "\n",
       "  age date_joined no_of_dependents marital_status  income  \n",
       "0  31   2/17/2019                3        married   40423  \n",
       "1  31   2/17/2019                3        married   40423  \n",
       "2  31   2/17/2019                3        married   40423  \n",
       "3  31   2/17/2019                3        married   40423  \n",
       "4  31   2/17/2019                3        married   40423  \n",
       "\n",
       "[5 rows x 34 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "65b3f507",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.110817Z",
     "start_time": "2022-11-07T12:58:06.099904Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 32404859 entries, 0 to 32404858\n",
      "Data columns (total 34 columns):\n",
      " #   Column                         Dtype   \n",
      "---  ------                         -----   \n",
      " 0   order_id                       int64   \n",
      " 1   user_id                        int64   \n",
      " 2   eval_set                       object  \n",
      " 3   order_number                   int64   \n",
      " 4   orders_day_of_week             int64   \n",
      " 5   order_hour_of_day              int64   \n",
      " 6   days_since_prior_order         float64 \n",
      " 7   product_id                     int64   \n",
      " 8   add_to_cart_order              int64   \n",
      " 9   reordered                      int64   \n",
      " 10  product_name                   object  \n",
      " 11  aisle_id                       int64   \n",
      " 12  department_id                  int64   \n",
      " 13  prices                         float64 \n",
      " 14  _merge                         category\n",
      " 15  price_range_loc                object  \n",
      " 16  busiest_day                    object  \n",
      " 17  busiest_days                   object  \n",
      " 18  busiest_period_of_day          object  \n",
      " 19  max_order                      int64   \n",
      " 20  loyalty_flag                   object  \n",
      " 21  avg_price                      float64 \n",
      " 22  spender_flag                   object  \n",
      " 23  median_days_since_prior_order  float64 \n",
      " 24  frequency_flag                 object  \n",
      " 25  first_name                     object  \n",
      " 26  surnam                         object  \n",
      " 27  gender                         object  \n",
      " 28  state                          object  \n",
      " 29  age                            int64   \n",
      " 30  date_joined                    object  \n",
      " 31  no_of_dependents               int64   \n",
      " 32  marital_status                 object  \n",
      " 33  income                         int64   \n",
      "dtypes: category(1), float64(4), int64(14), object(15)\n",
      "memory usage: 8.2+ GB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d33485ea",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.120591Z",
     "start_time": "2022-11-07T12:58:06.112913Z"
    }
   },
   "outputs": [],
   "source": [
    "departments = pd.read_csv(os.path.join(path, '02 Data', 'Prepared Data', 'departments_wrangled.csv'), index_col=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "7c62950a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.128329Z",
     "start_time": "2022-11-07T12:58:06.123150Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21, 2)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "departments.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "516ade68",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.137392Z",
     "start_time": "2022-11-07T12:58:06.130322Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>department</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>frozen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>other</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>bakery</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>produce</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>alcohol</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 department\n",
       "0           1     frozen\n",
       "1           2      other\n",
       "2           3     bakery\n",
       "3           4    produce\n",
       "4           5    alcohol"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "departments.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e48ee8ad",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.152024Z",
     "start_time": "2022-11-07T12:58:06.143254Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21 entries, 0 to 20\n",
      "Data columns (total 2 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   Unnamed: 0  21 non-null     int64 \n",
      " 1   department  21 non-null     object\n",
      "dtypes: int64(1), object(1)\n",
      "memory usage: 464.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "departments.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "18d6f314",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:06.158784Z",
     "start_time": "2022-11-07T12:58:06.155091Z"
    }
   },
   "outputs": [],
   "source": [
    "#Rename unnamed column to departmen_id, so that it can be merged\n",
    "departments.rename(columns={'Unnamed: 0':'department_id'}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3e4da1b7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:58:26.687930Z",
     "start_time": "2022-11-07T12:58:06.161777Z"
    }
   },
   "outputs": [],
   "source": [
    "#Deleting some columns\n",
    "df=df.drop(columns=['_merge', 'aisle_id', ' eval_set'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "485d3305",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:06.592237Z",
     "start_time": "2022-11-07T12:58:26.696917Z"
    }
   },
   "outputs": [],
   "source": [
    "# merging dataframes on department_id\n",
    "merged=df.merge(departments, on='department_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "638f0eda",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:06.647364Z",
     "start_time": "2022-11-07T12:59:06.603468Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(32404859, 33)"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "01043e0d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:06.715632Z",
     "start_time": "2022-11-07T12:59:06.650695Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>...</th>\n",
       "      <th>first_name</th>\n",
       "      <th>surnam</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2398795</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>473747</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>21.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2254736</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>29.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>431534</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>28.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Linda</td>\n",
       "      <td>Nguyen</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   2398795        1    prior             2                   3   \n",
       "2    473747        1    prior             3                   3   \n",
       "3   2254736        1    prior             4                   4   \n",
       "4    431534        1    prior             5                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                  8                     NaN         196                  1   \n",
       "1                  7                    15.0         196                  1   \n",
       "2                 12                    21.0         196                  1   \n",
       "3                  7                    29.0         196                  1   \n",
       "4                 15                    28.0         196                  1   \n",
       "\n",
       "   reordered  ... first_name  surnam  gender    state age date_joined  \\\n",
       "0          0  ...      Linda  Nguyen  Female  Alabama  31   2/17/2019   \n",
       "1          1  ...      Linda  Nguyen  Female  Alabama  31   2/17/2019   \n",
       "2          1  ...      Linda  Nguyen  Female  Alabama  31   2/17/2019   \n",
       "3          1  ...      Linda  Nguyen  Female  Alabama  31   2/17/2019   \n",
       "4          1  ...      Linda  Nguyen  Female  Alabama  31   2/17/2019   \n",
       "\n",
       "  no_of_dependents  marital_status income  department  \n",
       "0                3         married  40423   beverages  \n",
       "1                3         married  40423   beverages  \n",
       "2                3         married  40423   beverages  \n",
       "3                3         married  40423   beverages  \n",
       "4                3         married  40423   beverages  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merged.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "decf38ac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:08.289817Z",
     "start_time": "2022-11-07T12:59:06.719728Z"
    }
   },
   "outputs": [],
   "source": [
    "# delete original dataframes\n",
    "del df, departments"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7fe65a52",
   "metadata": {},
   "source": [
    "### 3. PII privacy checks  \n",
    "\n",
    "Consider any security implications that might exist for this new data. You’ll need to address any PII data in the data before continuing your analysis.  \n",
    "\n",
    "RESPONSE:  \n",
    "The combonation of customer first name, surnam, state, gender, family status, and dependents is all PII. With this unique combonation of some or all of these variables someone's identity could easily be found and privacy violated. It would probably make sense to remove 'First_name', 'surnam',  at the very least since all the other data is relevant for analysis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "30f104c1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:08.297585Z",
     "start_time": "2022-11-07T12:59:08.293263Z"
    }
   },
   "outputs": [],
   "source": [
    "df = merged"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a5f91d31",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:51.302891Z",
     "start_time": "2022-11-07T12:59:08.300260Z"
    }
   },
   "outputs": [],
   "source": [
    "# address PII\n",
    "df = df.drop(columns = ['first_name', 'surnam'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "d922a5e4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:51.351819Z",
     "start_time": "2022-11-07T12:59:51.318274Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['order_id', 'user_id', 'eval_set', 'order_number', 'orders_day_of_week',\n",
       "       'order_hour_of_day', 'days_since_prior_order', 'product_id',\n",
       "       'add_to_cart_order', 'reordered', 'product_name', 'department_id',\n",
       "       'prices', 'price_range_loc', 'busiest_day', 'busiest_days',\n",
       "       'busiest_period_of_day', 'max_order', 'loyalty_flag', 'avg_price',\n",
       "       'spender_flag', 'median_days_since_prior_order', 'frequency_flag',\n",
       "       'gender', 'state', 'age', 'date_joined', 'no_of_dependents',\n",
       "       'marital_status', 'income', 'department'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# check that columns were successfully dropped\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "950e8194",
   "metadata": {},
   "source": [
    "### 4. Assign regions  \n",
    "\n",
    "The Instacart officers are interested in comparing customer behavior in different geographic areas. Create a regional segmentation of the data. You’ll need to create a “Region” column based on the “State” column from your customers data set.  \n",
    "\n",
    "Use the region information in this Wikipedia article to create your column (you only need to create regions, not divisions).  \n",
    "\n",
    "Determine whether there’s a difference in spending habits between the different U.S. regions. (Hint: You can do this by crossing the variable you just created with the spending flag.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5473dc89",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T12:59:51.388899Z",
     "start_time": "2022-11-07T12:59:51.357480Z"
    }
   },
   "outputs": [],
   "source": [
    "northeast = ['Maine','New Hampshire','Vermont','Massachusetts','Rhode Island','Connecticut','New York','Pennsylvania','New Jersey']\n",
    "midwest = ['Wisconsin','Michigan','Illinois','Indiana','Ohio','North Dakota','South Dakota','Nebraska','Kansas','Minnesota','Iowa','Missouri']\n",
    "south = ['Delaware','Maryland','District of Columbia','Virginia','West Virginia','North Carolina','South Carolina','Georgia','Florida','Kentucky', 'Tennessee','Mississippi','Alabama','Oklahoma','Texas','Arkansas','Louisiana']\n",
    "west = ['Idaho','Montana','Wyoming','Nevada','Utah','Colorado','Arizona','New Mexico','Alaska','Washington','Oregon','California','Hawaii']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9b900eb5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:01.634376Z",
     "start_time": "2022-11-07T12:59:51.392460Z"
    }
   },
   "outputs": [],
   "source": [
    "# creating region flags with loc\n",
    "df.loc[df['state'].isin(northeast), 'region'] = 'Northeast'\n",
    "df.loc[df['state'].isin(midwest), 'region'] = 'Midwest'\n",
    "df.loc[df['state'].isin(south), 'region'] = 'South'\n",
    "df.loc[df['state'].isin(west), 'region'] = 'West'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "fc461dd4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:01.644731Z",
     "start_time": "2022-11-07T13:00:01.638983Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(32404859, 32)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "d1ee0263",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:01.688592Z",
     "start_time": "2022-11-07T13:00:01.648056Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>...</th>\n",
       "      <th>frequency_flag</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2398795</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>473747</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>21.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2254736</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>29.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>431534</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>28.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3367565</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>19.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>550135</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>20.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>3108588</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>14.0</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2295261</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>0.0</td>\n",
       "      <td>196</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2550362</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>10</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>30.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   2398795        1    prior             2                   3   \n",
       "2    473747        1    prior             3                   3   \n",
       "3   2254736        1    prior             4                   4   \n",
       "4    431534        1    prior             5                   4   \n",
       "5   3367565        1    prior             6                   2   \n",
       "6    550135        1    prior             7                   1   \n",
       "7   3108588        1    prior             8                   1   \n",
       "8   2295261        1    prior             9                   1   \n",
       "9   2550362        1    prior            10                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                  8                     NaN         196                  1   \n",
       "1                  7                    15.0         196                  1   \n",
       "2                 12                    21.0         196                  1   \n",
       "3                  7                    29.0         196                  1   \n",
       "4                 15                    28.0         196                  1   \n",
       "5                  7                    19.0         196                  1   \n",
       "6                  9                    20.0         196                  1   \n",
       "7                 14                    14.0         196                  2   \n",
       "8                 16                     0.0         196                  4   \n",
       "9                  8                    30.0         196                  1   \n",
       "\n",
       "   reordered  ...         frequency_flag  gender    state age date_joined  \\\n",
       "0          0  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "1          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "2          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "3          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "4          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "5          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "6          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "7          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "8          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "9          1  ...  Non-frequent customer  Female  Alabama  31   2/17/2019   \n",
       "\n",
       "  no_of_dependents marital_status  income department  region  \n",
       "0                3        married   40423  beverages   South  \n",
       "1                3        married   40423  beverages   South  \n",
       "2                3        married   40423  beverages   South  \n",
       "3                3        married   40423  beverages   South  \n",
       "4                3        married   40423  beverages   South  \n",
       "5                3        married   40423  beverages   South  \n",
       "6                3        married   40423  beverages   South  \n",
       "7                3        married   40423  beverages   South  \n",
       "8                3        married   40423  beverages   South  \n",
       "9                3        married   40423  beverages   South  \n",
       "\n",
       "[10 rows x 32 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "437ee0b9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:02.212826Z",
     "start_time": "2022-11-07T13:00:01.690690Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "South        10791885\n",
       "West          8292913\n",
       "Midwest       7597325\n",
       "Northeast     5722736\n",
       "Name: region, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['region'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ac747cc1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:10.763970Z",
     "start_time": "2022-11-07T13:00:02.215200Z"
    }
   },
   "outputs": [],
   "source": [
    "# analyzing regional spending differences with crosstab\n",
    "crosstab = pd.crosstab(df['region'], df['spender_flag'], dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "e8dac417",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:10.775472Z",
     "start_time": "2022-11-07T13:00:10.766969Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>spender_flag</th>\n",
       "      <th>High spender</th>\n",
       "      <th>Low spender</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>155975</td>\n",
       "      <td>7441350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>108225</td>\n",
       "      <td>5614511</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>209691</td>\n",
       "      <td>10582194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>160354</td>\n",
       "      <td>8132559</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "spender_flag  High spender  Low spender\n",
       "region                                 \n",
       "Midwest             155975      7441350\n",
       "Northeast           108225      5614511\n",
       "South               209691     10582194\n",
       "West                160354      8132559"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstab"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86226a55",
   "metadata": {},
   "source": [
    "The South has the highest number of spenders in both the high and low categories. With over 10 million low spenders and over 200k high spenders."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "e742f634",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:18.812466Z",
     "start_time": "2022-11-07T13:00:10.777616Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "region\n",
       "Midwest      12\n",
       "Northeast     9\n",
       "South        17\n",
       "West         13\n",
       "Name: state, dtype: int64"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of states per region\n",
    "df.groupby('region')['state'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "01bbd9be",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:24.267862Z",
     "start_time": "2022-11-07T13:00:18.828642Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "region\n",
       "Midwest      48519\n",
       "Northeast    36388\n",
       "South        68737\n",
       "West         52565\n",
       "Name: user_id, dtype: int64"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of customers per region\n",
    "df.groupby('region')['user_id'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "971a64e9",
   "metadata": {},
   "source": [
    "### 5. Flag and exclude customers with less than 5 orders  \n",
    "\n",
    "The Instacart CFO isn’t interested in customers who don’t generate much revenue for the app. Create an exclusion flag for low-activity customers (customers with less than 5 orders) and exclude them from the data.  \n",
    "\n",
    "Make sure you export this sample."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "7851da11",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:27.846616Z",
     "start_time": "2022-11-07T13:00:24.270873Z"
    }
   },
   "outputs": [],
   "source": [
    "# creating activity flag using loc\n",
    "df.loc[df['max_order']< 5, 'activity_flag'] = 'Low Activity'\n",
    "df.loc[df['max_order'] >= 5, 'activity_flag'] = 'High Activity'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "c7886f3d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:28.276028Z",
     "start_time": "2022-11-07T13:00:27.848710Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "High Activity    30964564\n",
       "Low Activity      1440295\n",
       "Name: activity_flag, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking freqeuency\n",
    "df['activity_flag'].value_counts(dropna = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6d2a102d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:28.293309Z",
     "start_time": "2022-11-07T13:00:28.277489Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>...</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>activity_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2398795</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>473747</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>21.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2254736</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>29.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>431534</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>28.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0   2539329        1    prior             1                   2   \n",
       "1   2398795        1    prior             2                   3   \n",
       "2    473747        1    prior             3                   3   \n",
       "3   2254736        1    prior             4                   4   \n",
       "4    431534        1    prior             5                   4   \n",
       "\n",
       "   order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                  8                     NaN         196                  1   \n",
       "1                  7                    15.0         196                  1   \n",
       "2                 12                    21.0         196                  1   \n",
       "3                  7                    29.0         196                  1   \n",
       "4                 15                    28.0         196                  1   \n",
       "\n",
       "   reordered  ...  gender    state  age date_joined no_of_dependents  \\\n",
       "0          0  ...  Female  Alabama   31   2/17/2019                3   \n",
       "1          1  ...  Female  Alabama   31   2/17/2019                3   \n",
       "2          1  ...  Female  Alabama   31   2/17/2019                3   \n",
       "3          1  ...  Female  Alabama   31   2/17/2019                3   \n",
       "4          1  ...  Female  Alabama   31   2/17/2019                3   \n",
       "\n",
       "  marital_status income  department region  activity_flag  \n",
       "0        married  40423   beverages  South  High Activity  \n",
       "1        married  40423   beverages  South  High Activity  \n",
       "2        married  40423   beverages  South  High Activity  \n",
       "3        married  40423   beverages  South  High Activity  \n",
       "4        married  40423   beverages  South  High Activity  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking new column\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "d3425e68",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:58.790770Z",
     "start_time": "2022-11-07T13:00:28.295344Z"
    }
   },
   "outputs": [],
   "source": [
    "# creating low activity dataset for CFO\n",
    "df_low_activity = df[df['activity_flag'] == 'Low Activity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "fa2321b5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:00:59.542074Z",
     "start_time": "2022-11-07T13:00:58.801620Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>...</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>activity_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>282</th>\n",
       "      <td>520620</td>\n",
       "      <td>120</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>54</td>\n",
       "      <td>3/2/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>99219</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>283</th>\n",
       "      <td>3273029</td>\n",
       "      <td>120</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>19.0</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>54</td>\n",
       "      <td>3/2/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>99219</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>284</th>\n",
       "      <td>520620</td>\n",
       "      <td>120</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>46149</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>54</td>\n",
       "      <td>3/2/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>99219</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285</th>\n",
       "      <td>3273029</td>\n",
       "      <td>120</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>19.0</td>\n",
       "      <td>46149</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>54</td>\n",
       "      <td>3/2/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>99219</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>286</th>\n",
       "      <td>906054</td>\n",
       "      <td>120</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>31102</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Kentucky</td>\n",
       "      <td>54</td>\n",
       "      <td>3/2/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>99219</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404853</th>\n",
       "      <td>174466</td>\n",
       "      <td>195180</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1000</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Male</td>\n",
       "      <td>Arizona</td>\n",
       "      <td>20</td>\n",
       "      <td>2/20/2017</td>\n",
       "      <td>3</td>\n",
       "      <td>living with parents and siblings</td>\n",
       "      <td>60256</td>\n",
       "      <td>bulk</td>\n",
       "      <td>West</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404854</th>\n",
       "      <td>532733</td>\n",
       "      <td>1860</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>15.0</td>\n",
       "      <td>5161</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>New Hampshire</td>\n",
       "      <td>35</td>\n",
       "      <td>3/13/2019</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>37960</td>\n",
       "      <td>bulk</td>\n",
       "      <td>Northeast</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404856</th>\n",
       "      <td>2288597</td>\n",
       "      <td>87619</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>23.0</td>\n",
       "      <td>5161</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Male</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>47</td>\n",
       "      <td>2/17/2017</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>89341</td>\n",
       "      <td>bulk</td>\n",
       "      <td>South</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404857</th>\n",
       "      <td>1064360</td>\n",
       "      <td>114159</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "      <td>30.0</td>\n",
       "      <td>42091</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Female</td>\n",
       "      <td>Montana</td>\n",
       "      <td>26</td>\n",
       "      <td>10/10/2017</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>80812</td>\n",
       "      <td>bulk</td>\n",
       "      <td>West</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32404858</th>\n",
       "      <td>2858391</td>\n",
       "      <td>92664</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>NaN</td>\n",
       "      <td>11325</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>Male</td>\n",
       "      <td>Washington</td>\n",
       "      <td>68</td>\n",
       "      <td>4/30/2019</td>\n",
       "      <td>0</td>\n",
       "      <td>divorced/widowed</td>\n",
       "      <td>44337</td>\n",
       "      <td>bulk</td>\n",
       "      <td>West</td>\n",
       "      <td>Low Activity</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1440295 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "282         520620      120    prior             1                   3   \n",
       "283        3273029      120    prior             3                   2   \n",
       "284         520620      120    prior             1                   3   \n",
       "285        3273029      120    prior             3                   2   \n",
       "286         906054      120    prior             2                   4   \n",
       "...            ...      ...      ...           ...                 ...   \n",
       "32404853    174466   195180    prior             2                   2   \n",
       "32404854    532733     1860    prior             4                   2   \n",
       "32404856   2288597    87619    prior             3                   3   \n",
       "32404857   1064360   114159    prior             3                   6   \n",
       "32404858   2858391    92664    prior             1                   0   \n",
       "\n",
       "          order_hour_of_day  days_since_prior_order  product_id  \\\n",
       "282                      11                     NaN         196   \n",
       "283                       8                    19.0         196   \n",
       "284                      11                     NaN       46149   \n",
       "285                       8                    19.0       46149   \n",
       "286                       7                    15.0       31102   \n",
       "...                     ...                     ...         ...   \n",
       "32404853                 10                    18.0        1000   \n",
       "32404854                 18                    15.0        5161   \n",
       "32404856                 11                    23.0        5161   \n",
       "32404857                 15                    30.0       42091   \n",
       "32404858                 15                     NaN       11325   \n",
       "\n",
       "          add_to_cart_order  reordered  ...  gender          state  age  \\\n",
       "282                       2          0  ...  Female       Kentucky   54   \n",
       "283                       2          1  ...  Female       Kentucky   54   \n",
       "284                       1          0  ...  Female       Kentucky   54   \n",
       "285                       1          1  ...  Female       Kentucky   54   \n",
       "286                       1          0  ...  Female       Kentucky   54   \n",
       "...                     ...        ...  ...     ...            ...  ...   \n",
       "32404853                  1          0  ...    Male        Arizona   20   \n",
       "32404854                  1          0  ...  Female  New Hampshire   35   \n",
       "32404856                  2          0  ...    Male        Alabama   47   \n",
       "32404857                  5          0  ...  Female        Montana   26   \n",
       "32404858                  1          0  ...    Male     Washington   68   \n",
       "\n",
       "         date_joined no_of_dependents                    marital_status  \\\n",
       "282         3/2/2017                2                           married   \n",
       "283         3/2/2017                2                           married   \n",
       "284         3/2/2017                2                           married   \n",
       "285         3/2/2017                2                           married   \n",
       "286         3/2/2017                2                           married   \n",
       "...              ...              ...                               ...   \n",
       "32404853   2/20/2017                3  living with parents and siblings   \n",
       "32404854   3/13/2019                1                           married   \n",
       "32404856   2/17/2017                2                           married   \n",
       "32404857  10/10/2017                1                           married   \n",
       "32404858   4/30/2019                0                  divorced/widowed   \n",
       "\n",
       "         income  department     region  activity_flag  \n",
       "282       99219   beverages      South   Low Activity  \n",
       "283       99219   beverages      South   Low Activity  \n",
       "284       99219   beverages      South   Low Activity  \n",
       "285       99219   beverages      South   Low Activity  \n",
       "286       99219   beverages      South   Low Activity  \n",
       "...         ...         ...        ...            ...  \n",
       "32404853  60256        bulk       West   Low Activity  \n",
       "32404854  37960        bulk  Northeast   Low Activity  \n",
       "32404856  89341        bulk      South   Low Activity  \n",
       "32404857  80812        bulk       West   Low Activity  \n",
       "32404858  44337        bulk       West   Low Activity  \n",
       "\n",
       "[1440295 rows x 33 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_low_activity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "f2993986",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:01:31.191321Z",
     "start_time": "2022-11-07T13:00:59.545008Z"
    }
   },
   "outputs": [],
   "source": [
    "# creating a new dataset of high activity sample only for CFO\n",
    "df_high_activity = df[df['activity_flag'] == 'High Activity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "8d12a78a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:01:31.275906Z",
     "start_time": "2022-11-07T13:01:31.203113Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>product_name</th>\n",
       "      <th>department_id</th>\n",
       "      <th>prices</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "      <th>max_order</th>\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>avg_price</th>\n",
       "      <th>spender_flag</th>\n",
       "      <th>median_days_since_prior_order</th>\n",
       "      <th>frequency_flag</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>activity_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2398795</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>15.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Average orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>473747</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>21.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2254736</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>29.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Average orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>431534</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>28.0</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Least busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>195</th>\n",
       "      <td>1520353</td>\n",
       "      <td>52</td>\n",
       "      <td>prior</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>8.0</td>\n",
       "      <td>196</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>27</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>6.356287</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>64</td>\n",
       "      <td>1/30/2018</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>40974</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>196</th>\n",
       "      <td>2542086</td>\n",
       "      <td>52</td>\n",
       "      <td>prior</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>196</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>27</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>6.356287</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>64</td>\n",
       "      <td>1/30/2018</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>40974</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>197</th>\n",
       "      <td>944694</td>\n",
       "      <td>52</td>\n",
       "      <td>prior</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>6.0</td>\n",
       "      <td>196</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>27</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>6.356287</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>64</td>\n",
       "      <td>1/30/2018</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>40974</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>198</th>\n",
       "      <td>1268191</td>\n",
       "      <td>52</td>\n",
       "      <td>prior</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>8.0</td>\n",
       "      <td>196</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>27</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>6.356287</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>64</td>\n",
       "      <td>1/30/2018</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>40974</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>199</th>\n",
       "      <td>1122089</td>\n",
       "      <td>52</td>\n",
       "      <td>prior</td>\n",
       "      <td>17</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>6.0</td>\n",
       "      <td>196</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>27</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>6.356287</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>64</td>\n",
       "      <td>1/30/2018</td>\n",
       "      <td>2</td>\n",
       "      <td>married</td>\n",
       "      <td>40974</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>200 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0     2539329        1    prior             1                   2   \n",
       "1     2398795        1    prior             2                   3   \n",
       "2      473747        1    prior             3                   3   \n",
       "3     2254736        1    prior             4                   4   \n",
       "4      431534        1    prior             5                   4   \n",
       "..        ...      ...      ...           ...                 ...   \n",
       "195   1520353       52    prior            10                   2   \n",
       "196   2542086       52    prior            11                   2   \n",
       "197    944694       52    prior            12                   1   \n",
       "198   1268191       52    prior            15                   2   \n",
       "199   1122089       52    prior            17                   2   \n",
       "\n",
       "     order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                    8                     NaN         196                  1   \n",
       "1                    7                    15.0         196                  1   \n",
       "2                   12                    21.0         196                  1   \n",
       "3                    7                    29.0         196                  1   \n",
       "4                   15                    28.0         196                  1   \n",
       "..                 ...                     ...         ...                ...   \n",
       "195                 10                     8.0         196                  4   \n",
       "196                  9                     7.0         196                  3   \n",
       "197                 16                     6.0         196                  7   \n",
       "198                 11                     8.0         196                  3   \n",
       "199                 10                     6.0         196                  4   \n",
       "\n",
       "     reordered product_name  department_id  prices    price_range_loc  \\\n",
       "0            0         Soda              7     9.0  Mid-range product   \n",
       "1            1         Soda              7     9.0  Mid-range product   \n",
       "2            1         Soda              7     9.0  Mid-range product   \n",
       "3            1         Soda              7     9.0  Mid-range product   \n",
       "4            1         Soda              7     9.0  Mid-range product   \n",
       "..         ...          ...            ...     ...                ...   \n",
       "195          1         Soda              7     9.0  Mid-range product   \n",
       "196          1         Soda              7     9.0  Mid-range product   \n",
       "197          1         Soda              7     9.0  Mid-range product   \n",
       "198          1         Soda              7     9.0  Mid-range product   \n",
       "199          1         Soda              7     9.0  Mid-range product   \n",
       "\n",
       "        busiest_day        busiest_days busiest_period_of_day  max_order  \\\n",
       "0    Regularly busy  Regulary busy days           Most orders         10   \n",
       "1    Regularly busy        Slowest days        Average orders         10   \n",
       "2    Regularly busy        Slowest days           Most orders         10   \n",
       "3        Least busy        Slowest days        Average orders         10   \n",
       "4        Least busy        Slowest days           Most orders         10   \n",
       "..              ...                 ...                   ...        ...   \n",
       "195  Regularly busy  Regulary busy days           Most orders         27   \n",
       "196  Regularly busy  Regulary busy days           Most orders         27   \n",
       "197  Regularly busy        Busiest days           Most orders         27   \n",
       "198  Regularly busy  Regulary busy days           Most orders         27   \n",
       "199  Regularly busy  Regulary busy days           Most orders         27   \n",
       "\n",
       "         loyalty_flag  avg_price spender_flag  median_days_since_prior_order  \\\n",
       "0        New customer   6.367797  Low spender                           20.5   \n",
       "1        New customer   6.367797  Low spender                           20.5   \n",
       "2        New customer   6.367797  Low spender                           20.5   \n",
       "3        New customer   6.367797  Low spender                           20.5   \n",
       "4        New customer   6.367797  Low spender                           20.5   \n",
       "..                ...        ...          ...                            ...   \n",
       "195  Regular customer   6.356287  Low spender                            8.0   \n",
       "196  Regular customer   6.356287  Low spender                            8.0   \n",
       "197  Regular customer   6.356287  Low spender                            8.0   \n",
       "198  Regular customer   6.356287  Low spender                            8.0   \n",
       "199  Regular customer   6.356287  Low spender                            8.0   \n",
       "\n",
       "            frequency_flag  gender    state  age date_joined  \\\n",
       "0    Non-frequent customer  Female  Alabama   31   2/17/2019   \n",
       "1    Non-frequent customer  Female  Alabama   31   2/17/2019   \n",
       "2    Non-frequent customer  Female  Alabama   31   2/17/2019   \n",
       "3    Non-frequent customer  Female  Alabama   31   2/17/2019   \n",
       "4    Non-frequent customer  Female  Alabama   31   2/17/2019   \n",
       "..                     ...     ...      ...  ...         ...   \n",
       "195      Frequent customer  Female  Alabama   64   1/30/2018   \n",
       "196      Frequent customer  Female  Alabama   64   1/30/2018   \n",
       "197      Frequent customer  Female  Alabama   64   1/30/2018   \n",
       "198      Frequent customer  Female  Alabama   64   1/30/2018   \n",
       "199      Frequent customer  Female  Alabama   64   1/30/2018   \n",
       "\n",
       "     no_of_dependents marital_status  income department region  activity_flag  \n",
       "0                   3        married   40423  beverages  South  High Activity  \n",
       "1                   3        married   40423  beverages  South  High Activity  \n",
       "2                   3        married   40423  beverages  South  High Activity  \n",
       "3                   3        married   40423  beverages  South  High Activity  \n",
       "4                   3        married   40423  beverages  South  High Activity  \n",
       "..                ...            ...     ...        ...    ...            ...  \n",
       "195                 2        married   40974  beverages  South  High Activity  \n",
       "196                 2        married   40974  beverages  South  High Activity  \n",
       "197                 2        married   40974  beverages  South  High Activity  \n",
       "198                 2        married   40974  beverages  South  High Activity  \n",
       "199                 2        married   40974  beverages  South  High Activity  \n",
       "\n",
       "[200 rows x 33 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.set_option('display.max_columns', None)\n",
    "df_high_activity.head(200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "a5df72ce",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:01:31.377415Z",
     "start_time": "2022-11-07T13:01:31.278941Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 30964564 entries, 0 to 32404855\n",
      "Data columns (total 33 columns):\n",
      " #   Column                         Dtype  \n",
      "---  ------                         -----  \n",
      " 0   order_id                       int64  \n",
      " 1   user_id                        int64  \n",
      " 2   eval_set                       object \n",
      " 3   order_number                   int64  \n",
      " 4   orders_day_of_week             int64  \n",
      " 5   order_hour_of_day              int64  \n",
      " 6   days_since_prior_order         float64\n",
      " 7   product_id                     int64  \n",
      " 8   add_to_cart_order              int64  \n",
      " 9   reordered                      int64  \n",
      " 10  product_name                   object \n",
      " 11  department_id                  int64  \n",
      " 12  prices                         float64\n",
      " 13  price_range_loc                object \n",
      " 14  busiest_day                    object \n",
      " 15  busiest_days                   object \n",
      " 16  busiest_period_of_day          object \n",
      " 17  max_order                      int64  \n",
      " 18  loyalty_flag                   object \n",
      " 19  avg_price                      float64\n",
      " 20  spender_flag                   object \n",
      " 21  median_days_since_prior_order  float64\n",
      " 22  frequency_flag                 object \n",
      " 23  gender                         object \n",
      " 24  state                          object \n",
      " 25  age                            int64  \n",
      " 26  date_joined                    object \n",
      " 27  no_of_dependents               int64  \n",
      " 28  marital_status                 object \n",
      " 29  income                         int64  \n",
      " 30  department                     object \n",
      " 31  region                         object \n",
      " 32  activity_flag                  object \n",
      "dtypes: float64(4), int64(13), object(16)\n",
      "memory usage: 7.8+ GB\n"
     ]
    }
   ],
   "source": [
    "df_high_activity.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "4013f226",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:02:20.911968Z",
     "start_time": "2022-11-07T13:01:31.380331Z"
    }
   },
   "outputs": [],
   "source": [
    "# exporting high activity sample 2\n",
    "df_high_activity.to_pickle(os.path.join(path,'02 Data','Prepared Data','high_activity_sample.pkl'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3d1fa9da",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:02:22.982925Z",
     "start_time": "2022-11-07T13:02:20.924005Z"
    }
   },
   "outputs": [],
   "source": [
    "# exporting low activity sample\n",
    "df_low_activity.to_pickle(os.path.join(path,'02 Data','Prepared Data','low_activity_sample.pkl'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "3fc616c8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:02:22.994192Z",
     "start_time": "2022-11-07T13:02:22.990466Z"
    }
   },
   "outputs": [],
   "source": [
    "# delete df_low_activity dataset to reduce memory usage\n",
    "del df_low_activity"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "a69c31ad",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:27.051388Z",
     "start_time": "2022-11-07T13:02:22.998450Z"
    }
   },
   "outputs": [],
   "source": [
    "# export original dataset with changes to reduce memore usage\n",
    "df.to_pickle(os.path.join(path, '02 Data', 'Prepared Data', 'original_orders_products_4.10.0.pkl'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "f2b168ca",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:28.304194Z",
     "start_time": "2022-11-07T13:03:27.060335Z"
    }
   },
   "outputs": [],
   "source": [
    "#delete original dataset to reduce memory usage\n",
    "del df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ab7ddea",
   "metadata": {},
   "source": [
    "##### I will work further with df_high_activity data because the Instacart CFO isn’t interested in customers who don’t generate much revenue for the app."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "390d5eab",
   "metadata": {},
   "source": [
    "### 6. Creating customer profile \n",
    "\n",
    " \n",
    " The marketing and business strategy units at Instacart want to create more-relevant marketing strategies for different products and are, thus, curious about customer profiling in their database. Create a profiling variable based on age, income, certain goods in the “department_id” column, and number of dependents. You might also use the “orders_day_of_the_week” and “order_hour_of_day” columns if you can think of a way they would impact customer profiles. (Hint: As an example, try thinking of what characteristics would lead you to the profile “Single adult” or “Young parent.”)  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40890770",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-10-31T20:37:42.653342Z",
     "start_time": "2022-10-31T20:37:42.637089Z"
    }
   },
   "source": [
    "#### 6a. Age profile  \n",
    "Age_profile (Young adult =<30, Mid adult =30-64, Senior >=65) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "fd7a6c4e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:32.721404Z",
     "start_time": "2022-11-07T13:03:28.308572Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mid Adult      16464780\n",
       "Senior          8195544\n",
       "Young Adult     6304240\n",
       "Name: age_profile, dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating age group profile\n",
    "df_high_activity.loc[df_high_activity['age']<=30, 'age_profile']= 'Young Adult'\n",
    "df_high_activity.loc[(df_high_activity['age']>30) & (df_high_activity['age']<65), 'age_profile']= \"Mid Adult\"\n",
    "df_high_activity.loc[df_high_activity['age']>=65, 'age_profile']= 'Senior'\n",
    "df_high_activity['age_profile'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b92f4fd9",
   "metadata": {},
   "source": [
    "#### 6b. Parental Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ca388cd2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:36.567319Z",
     "start_time": "2022-11-07T13:03:32.725202Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Older Parent    15220348\n",
       "Young Parent     4369985\n",
       "Mid Parent       3634550\n",
       "Name: parental_age_profile, dtype: int64"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create parental age profile for different groups\n",
    "df_high_activity.loc[(df_high_activity['age']<30) & (df_high_activity['no_of_dependents']>=1), 'parental_age_profile']= 'Young Parent'\n",
    "df_high_activity.loc[(df_high_activity['age']>=30) & (df_high_activity['age']<40) & (df_high_activity['no_of_dependents']>=1), 'parental_age_profile']= 'Mid Parent'\n",
    "df_high_activity.loc[(df_high_activity['age']>=40) & (df_high_activity['no_of_dependents']>=1), 'parental_age_profile']= 'Older Parent'\n",
    "df_high_activity['parental_age_profile'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "400c60aa",
   "metadata": {},
   "source": [
    "#### 6c. Single Parent Profile  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "bc5a23d8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:41.926031Z",
     "start_time": "2022-11-07T13:03:36.569062Z"
    }
   },
   "outputs": [],
   "source": [
    "crosstabfam= pd.crosstab(df_high_activity['marital_status'], df_high_activity['no_of_dependents'], dropna=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "0c4f9f72",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:41.937494Z",
     "start_time": "2022-11-07T13:03:41.928527Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>marital_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>divorced/widowed</th>\n",
       "      <td>2645271</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>living with parents and siblings</th>\n",
       "      <td>0</td>\n",
       "      <td>508045</td>\n",
       "      <td>484658</td>\n",
       "      <td>488469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>married</th>\n",
       "      <td>0</td>\n",
       "      <td>7211061</td>\n",
       "      <td>7248603</td>\n",
       "      <td>7284047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>single</th>\n",
       "      <td>5094410</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "no_of_dependents                        0        1        2        3\n",
       "marital_status                                                      \n",
       "divorced/widowed                  2645271        0        0        0\n",
       "living with parents and siblings        0   508045   484658   488469\n",
       "married                                 0  7211061  7248603  7284047\n",
       "single                            5094410        0        0        0"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "crosstabfam"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "e7cf1fd7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:51.674125Z",
     "start_time": "2022-11-07T13:03:41.940809Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Nuclear Family    21743711\n",
       "Single Parent      1481172\n",
       "Name: parental_relationship_status, dtype: int64"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create parental-relationship status flag for different groups\n",
    "df_high_activity.loc[(df_high_activity['marital_status'] == 'single') & (df_high_activity['no_of_dependents']>=1), 'parental_relationship_status']= 'Single Parent'\n",
    "df_high_activity.loc[(df_high_activity['marital_status'] == 'divorved/widowed') & (df_high_activity['no_of_dependents']>=1), 'parental_relationship_status']= 'Single Parent'\n",
    "df_high_activity.loc[(df_high_activity['marital_status'] == 'living with parents and siblings') & (df_high_activity['no_of_dependents']>=1), 'parental_relationship_status']= 'Single Parent'\n",
    "df_high_activity.loc[(df_high_activity['marital_status'] =='married') & (df_high_activity['no_of_dependents']>=1), 'parental_relationship_status']= 'Nuclear Family'\n",
    "df_high_activity['parental_relationship_status'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "678c7142",
   "metadata": {},
   "source": [
    "#### 6d. Relationship-Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "ae353bed",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:03:57.802632Z",
     "start_time": "2022-11-07T13:03:51.677165Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>marital_status</th>\n",
       "      <th>divorced/widowed</th>\n",
       "      <th>living with parents and siblings</th>\n",
       "      <th>married</th>\n",
       "      <th>single</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>623313</td>\n",
       "      <td>0</td>\n",
       "      <td>12320429</td>\n",
       "      <td>3521038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>2021958</td>\n",
       "      <td>0</td>\n",
       "      <td>6173586</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>0</td>\n",
       "      <td>1481172</td>\n",
       "      <td>3249696</td>\n",
       "      <td>1573372</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "marital_status  divorced/widowed  living with parents and siblings   married  \\\n",
       "age_profile                                                                    \n",
       "Mid Adult                 623313                                 0  12320429   \n",
       "Senior                   2021958                                 0   6173586   \n",
       "Young Adult                    0                           1481172   3249696   \n",
       "\n",
       "marital_status   single  \n",
       "age_profile              \n",
       "Mid Adult       3521038  \n",
       "Senior                0  \n",
       "Young Adult     1573372  "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a relationship-age flag\n",
    "crosstab_ra= pd.crosstab(df_high_activity['age_profile'], df_high_activity['marital_status'], dropna=False)\n",
    "crosstab_ra"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "d0660755",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:04:35.397505Z",
     "start_time": "2022-11-07T13:03:57.806607Z"
    }
   },
   "outputs": [],
   "source": [
    "df_high_activity.loc[(df_high_activity['age_profile']=='Mid Adult') & (df_high_activity['marital_status'] == 'divorced/widowed'), 'relationship_age_status']= 'Single Mid Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Mid Adult') & (df_high_activity['marital_status'] == 'single'), 'relationship_age_status']= 'Single Mid Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Mid Adult') & (df_high_activity['marital_status'] == 'living with parents and siblings'), 'relationship_age_status']= 'Single Mid Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Mid Adult') & (df_high_activity['marital_status']=='married'), 'relationship_age_status']= 'Married Mid Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Senior') & (df_high_activity['marital_status'] == 'divorced/widowed'), 'relationship_age_status']= 'Single Senior'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Senior') & (df_high_activity['marital_status'] == 'single'), 'relationship_age_status']= 'Single Senior'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Senior') & (df_high_activity['marital_status'] == 'living with parents and siblings'), 'relationship_age_status']= 'Single Senior'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Senior') & (df_high_activity['marital_status']=='married'), 'relationship_age_status']= 'Married Senior'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Young Adult') & (df_high_activity['marital_status'] == 'divorced/widowed'), 'relationship_age_status']= 'Single Young Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Young Adult') & (df_high_activity['marital_status'] == 'single'), 'relationship_age_status']= 'Single Young Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Young Adult') & (df_high_activity['marital_status'] == 'living with parents and siblings'), 'relationship_age_status']= 'Single Young Adult'\n",
    "df_high_activity.loc[(df_high_activity['age_profile']=='Young Adult') & (df_high_activity['marital_status']=='married'), 'relationship_age_status']= 'Married Young Adult'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "d366546a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:04:36.575773Z",
     "start_time": "2022-11-07T13:04:35.401220Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Married Mid Adult      12320429\n",
       "Married Senior          6173586\n",
       "Single Mid Adult        4144351\n",
       "Married Young Adult     3249696\n",
       "Single Young Adult      3054544\n",
       "Single Senior           2021958\n",
       "Name: relationship_age_status, dtype: int64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_high_activity['relationship_age_status'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "393f8feb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-10-31T20:39:01.210312Z",
     "start_time": "2022-10-31T20:39:01.206513Z"
    }
   },
   "source": [
    "#### 6e. Income profile  \n",
    "\n",
    "Based on division of income in US; Low = less than 50,000. Middle = 51,000 - 150,000. High = more than $151,000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "3094fe15",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:04:40.902310Z",
     "start_time": "2022-11-07T13:04:36.578765Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mid Class     23582346\n",
       "High Class     3709820\n",
       "Low Class      3362554\n",
       "Name: income_profile, dtype: int64"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating Income profile\n",
    "df_high_activity.loc[df_high_activity['income']<=50000, 'income_profile']= 'Low Class'\n",
    "df_high_activity.loc[(df_high_activity['income']>51000) & (df_high_activity['income']<=150000), 'income_profile']= \"Mid Class\"\n",
    "df_high_activity.loc[df_high_activity['income']>=151000, 'income_profile']= 'High Class'\n",
    "df_high_activity['income_profile'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2fd6bafc",
   "metadata": {},
   "source": [
    "#### 6f. Gender Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "6ef27aac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:04:42.744148Z",
     "start_time": "2022-11-07T13:04:40.905576Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Male      15586740\n",
       "Female    15377824\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_high_activity['gender'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d2f043c",
   "metadata": {},
   "source": [
    "#### 6g. Deparments Profiles - Alcohol, Baby items, International items"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e1fc863a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:04:44.236379Z",
     "start_time": "2022-11-07T13:04:42.747886Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "produce            9079273\n",
       "dairy eggs         5177182\n",
       "snacks             2766406\n",
       "beverages          2571901\n",
       "frozen             2121731\n",
       "pantry             1782705\n",
       "bakery             1120828\n",
       "canned goods       1012074\n",
       "deli               1003834\n",
       "dry goods pasta     822136\n",
       "household           699857\n",
       "meat seafood        674781\n",
       "breakfast           670850\n",
       "personal care       424306\n",
       "babies              410392\n",
       "international       255991\n",
       "alcohol             144627\n",
       "pets                 93060\n",
       "missing              64768\n",
       "other                34411\n",
       "bulk                 33451\n",
       "Name: department, dtype: int64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_high_activity['department'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0917f329",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-03T22:09:26.284517Z",
     "start_time": "2022-11-03T22:09:26.276547Z"
    }
   },
   "source": [
    "#### Alcohol drinker profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "efda5274",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:05:16.247802Z",
     "start_time": "2022-11-07T13:05:05.579624Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    28634074\n",
       "1     2330490\n",
       "Name: alcohol_flag, dtype: int64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create an alcohol flag, 0=did not buy alcohol, 1=bought alcohol\n",
    "df_high_activity['alcohol_flag']= [1 if x== 'alcohol' else 0 for x in df_high_activity['department']]\n",
    "df_high_activity['alcohol_flag']= df_high_activity.groupby('user_id')['alcohol_flag'].transform(np.max)\n",
    "df_high_activity['alcohol_flag'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b7dbc127",
   "metadata": {},
   "source": [
    "#### Baby Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "37390a1c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:06:12.423425Z",
     "start_time": "2022-11-07T13:06:02.069923Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    21154311\n",
       "1     9810253\n",
       "Name: baby_flag, dtype: int64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create baby flag, 0=didn't buy baby items, 1=bought baby items\n",
    "df_high_activity['baby_flag']= [1 if x== 'babies' else 0 for x in df_high_activity['department']]\n",
    "df_high_activity['baby_flag']= df_high_activity.groupby('user_id')['baby_flag'].transform(np.max)\n",
    "df_high_activity['baby_flag'].value_counts(dropna= False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8284917",
   "metadata": {},
   "source": [
    "####  Pet Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "c6c93e6b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:06:22.519835Z",
     "start_time": "2022-11-07T13:06:12.425679Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    21154311\n",
       "1     9810253\n",
       "Name: pet_flag, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a pet flag, 0=no pets, 1=has pets\n",
    "df_high_activity['pet_flag']= [1 if x== 'pets' else 0 for x in df_high_activity['department']]\n",
    "df_high_activity['pet_flag']= df_high_activity.groupby('user_id')['baby_flag'].transform(np.max)\n",
    "df_high_activity['pet_flag'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "959f3aac",
   "metadata": {},
   "source": [
    "#### International Buyer Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "d1fed721",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:07:37.651191Z",
     "start_time": "2022-11-07T13:07:27.524060Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    19161614\n",
       "0    11802950\n",
       "Name: international_flag, dtype: int64"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# International buyer if bought international item at least 1x (1) or not (0)\n",
    "df_high_activity['international_flag']=[1 if x=='international' else 0 for x in df_high_activity['department']]\n",
    "df_high_activity['international_flag']=df_high_activity.groupby(['user_id'])['international_flag'].transform(np.max)\n",
    "df_high_activity['international_flag'].value_counts(dropna=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1d654040",
   "metadata": {},
   "source": [
    "### 7. Creating an appropriate visualization to show the distribution of profiles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "3fccff54",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:09:55.800831Z",
     "start_time": "2022-11-07T13:09:54.553187Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>user_id</th>\n",
       "      <th>eval_set</th>\n",
       "      <th>order_number</th>\n",
       "      <th>orders_day_of_week</th>\n",
       "      <th>order_hour_of_day</th>\n",
       "      <th>days_since_prior_order</th>\n",
       "      <th>product_id</th>\n",
       "      <th>add_to_cart_order</th>\n",
       "      <th>reordered</th>\n",
       "      <th>product_name</th>\n",
       "      <th>department_id</th>\n",
       "      <th>prices</th>\n",
       "      <th>price_range_loc</th>\n",
       "      <th>busiest_day</th>\n",
       "      <th>busiest_days</th>\n",
       "      <th>busiest_period_of_day</th>\n",
       "      <th>max_order</th>\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>avg_price</th>\n",
       "      <th>spender_flag</th>\n",
       "      <th>median_days_since_prior_order</th>\n",
       "      <th>frequency_flag</th>\n",
       "      <th>gender</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>date_joined</th>\n",
       "      <th>no_of_dependents</th>\n",
       "      <th>marital_status</th>\n",
       "      <th>income</th>\n",
       "      <th>department</th>\n",
       "      <th>region</th>\n",
       "      <th>activity_flag</th>\n",
       "      <th>age_profile</th>\n",
       "      <th>parental_age_profile</th>\n",
       "      <th>parental_relationship_status</th>\n",
       "      <th>relationship_age_status</th>\n",
       "      <th>income_profile</th>\n",
       "      <th>alcohol_flag</th>\n",
       "      <th>baby_flag</th>\n",
       "      <th>pet_flag</th>\n",
       "      <th>international_flag</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2539329</td>\n",
       "      <td>1</td>\n",
       "      <td>prior</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>196</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>10</td>\n",
       "      <td>New customer</td>\n",
       "      <td>6.367797</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>20.5</td>\n",
       "      <td>Non-frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Alabama</td>\n",
       "      <td>31</td>\n",
       "      <td>2/17/2019</td>\n",
       "      <td>3</td>\n",
       "      <td>married</td>\n",
       "      <td>40423</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "      <td>Mid Adult</td>\n",
       "      <td>Mid Parent</td>\n",
       "      <td>Nuclear Family</td>\n",
       "      <td>Married Mid Adult</td>\n",
       "      <td>Low Class</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2968173</td>\n",
       "      <td>15</td>\n",
       "      <td>prior</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Busiest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>22</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>3.980556</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>10.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Indiana</td>\n",
       "      <td>69</td>\n",
       "      <td>6/3/2019</td>\n",
       "      <td>0</td>\n",
       "      <td>divorced/widowed</td>\n",
       "      <td>54313</td>\n",
       "      <td>beverages</td>\n",
       "      <td>Midwest</td>\n",
       "      <td>High Activity</td>\n",
       "      <td>Senior</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Single Senior</td>\n",
       "      <td>Mid Class</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2293453</td>\n",
       "      <td>19</td>\n",
       "      <td>prior</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>6.0</td>\n",
       "      <td>196</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Regulary busy days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>9</td>\n",
       "      <td>New customer</td>\n",
       "      <td>8.372059</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>6.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Louisiana</td>\n",
       "      <td>62</td>\n",
       "      <td>2/3/2017</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>151988</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "      <td>Mid Adult</td>\n",
       "      <td>Older Parent</td>\n",
       "      <td>Nuclear Family</td>\n",
       "      <td>Married Mid Adult</td>\n",
       "      <td>High Class</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>1573906</td>\n",
       "      <td>21</td>\n",
       "      <td>prior</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>6.0</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>33</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>7.012683</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>7.5</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Male</td>\n",
       "      <td>Montana</td>\n",
       "      <td>71</td>\n",
       "      <td>6/18/2019</td>\n",
       "      <td>0</td>\n",
       "      <td>divorced/widowed</td>\n",
       "      <td>124643</td>\n",
       "      <td>beverages</td>\n",
       "      <td>West</td>\n",
       "      <td>High Activity</td>\n",
       "      <td>Senior</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Single Senior</td>\n",
       "      <td>Mid Class</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>1593000</td>\n",
       "      <td>31</td>\n",
       "      <td>prior</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7.0</td>\n",
       "      <td>196</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>Soda</td>\n",
       "      <td>7</td>\n",
       "      <td>9.0</td>\n",
       "      <td>Mid-range product</td>\n",
       "      <td>Regularly busy</td>\n",
       "      <td>Slowest days</td>\n",
       "      <td>Most orders</td>\n",
       "      <td>20</td>\n",
       "      <td>Regular customer</td>\n",
       "      <td>8.137793</td>\n",
       "      <td>Low spender</td>\n",
       "      <td>6.0</td>\n",
       "      <td>Frequent customer</td>\n",
       "      <td>Female</td>\n",
       "      <td>Oklahoma</td>\n",
       "      <td>38</td>\n",
       "      <td>1/22/2019</td>\n",
       "      <td>1</td>\n",
       "      <td>married</td>\n",
       "      <td>52311</td>\n",
       "      <td>beverages</td>\n",
       "      <td>South</td>\n",
       "      <td>High Activity</td>\n",
       "      <td>Mid Adult</td>\n",
       "      <td>Mid Parent</td>\n",
       "      <td>Nuclear Family</td>\n",
       "      <td>Married Mid Adult</td>\n",
       "      <td>Mid Class</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     order_id  user_id eval_set  order_number  orders_day_of_week  \\\n",
       "0     2539329        1    prior             1                   2   \n",
       "13    2968173       15    prior            15                   1   \n",
       "33    2293453       19    prior             2                   5   \n",
       "59    1573906       21    prior            10                   3   \n",
       "109   1593000       31    prior            10                   3   \n",
       "\n",
       "     order_hour_of_day  days_since_prior_order  product_id  add_to_cart_order  \\\n",
       "0                    8                     NaN         196                  1   \n",
       "13                   9                     7.0         196                  2   \n",
       "33                  14                     6.0         196                  3   \n",
       "59                  10                     6.0         196                  2   \n",
       "109                  8                     7.0         196                 17   \n",
       "\n",
       "     reordered product_name  department_id  prices    price_range_loc  \\\n",
       "0            0         Soda              7     9.0  Mid-range product   \n",
       "13           0         Soda              7     9.0  Mid-range product   \n",
       "33           0         Soda              7     9.0  Mid-range product   \n",
       "59           0         Soda              7     9.0  Mid-range product   \n",
       "109          0         Soda              7     9.0  Mid-range product   \n",
       "\n",
       "        busiest_day        busiest_days busiest_period_of_day  max_order  \\\n",
       "0    Regularly busy  Regulary busy days           Most orders         10   \n",
       "13   Regularly busy        Busiest days           Most orders         22   \n",
       "33   Regularly busy  Regulary busy days           Most orders          9   \n",
       "59   Regularly busy        Slowest days           Most orders         33   \n",
       "109  Regularly busy        Slowest days           Most orders         20   \n",
       "\n",
       "         loyalty_flag  avg_price spender_flag  median_days_since_prior_order  \\\n",
       "0        New customer   6.367797  Low spender                           20.5   \n",
       "13   Regular customer   3.980556  Low spender                           10.0   \n",
       "33       New customer   8.372059  Low spender                            6.0   \n",
       "59   Regular customer   7.012683  Low spender                            7.5   \n",
       "109  Regular customer   8.137793  Low spender                            6.0   \n",
       "\n",
       "            frequency_flag  gender      state  age date_joined  \\\n",
       "0    Non-frequent customer  Female    Alabama   31   2/17/2019   \n",
       "13       Frequent customer  Female    Indiana   69    6/3/2019   \n",
       "33       Frequent customer  Female  Louisiana   62    2/3/2017   \n",
       "59       Frequent customer    Male    Montana   71   6/18/2019   \n",
       "109      Frequent customer  Female   Oklahoma   38   1/22/2019   \n",
       "\n",
       "     no_of_dependents    marital_status  income department   region  \\\n",
       "0                   3           married   40423  beverages    South   \n",
       "13                  0  divorced/widowed   54313  beverages  Midwest   \n",
       "33                  1           married  151988  beverages    South   \n",
       "59                  0  divorced/widowed  124643  beverages     West   \n",
       "109                 1           married   52311  beverages    South   \n",
       "\n",
       "     activity_flag age_profile parental_age_profile  \\\n",
       "0    High Activity   Mid Adult           Mid Parent   \n",
       "13   High Activity      Senior                  NaN   \n",
       "33   High Activity   Mid Adult         Older Parent   \n",
       "59   High Activity      Senior                  NaN   \n",
       "109  High Activity   Mid Adult           Mid Parent   \n",
       "\n",
       "    parental_relationship_status relationship_age_status income_profile  \\\n",
       "0                 Nuclear Family       Married Mid Adult      Low Class   \n",
       "13                           NaN           Single Senior      Mid Class   \n",
       "33                Nuclear Family       Married Mid Adult     High Class   \n",
       "59                           NaN           Single Senior      Mid Class   \n",
       "109               Nuclear Family       Married Mid Adult      Mid Class   \n",
       "\n",
       "     alcohol_flag  baby_flag  pet_flag  international_flag  \n",
       "0               0          0         0                   0  \n",
       "13              0          0         0                   0  \n",
       "33              0          0         0                   1  \n",
       "59              1          0         0                   1  \n",
       "109             1          0         0                   1  "
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create a subset with unique customers\n",
    "df_unique_customers=df_high_activity.drop_duplicates(subset='user_id')\n",
    "df_unique_customers.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "73f0b1a7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T13:10:05.454746Z",
     "start_time": "2022-11-07T13:10:05.449624Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(162631, 42)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b729b599",
   "metadata": {},
   "source": [
    " #### 7a. Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 543,
   "id": "5fec2c9f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T17:51:01.098130Z",
     "start_time": "2022-11-08T17:51:00.947980Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Customers')"
      ]
     },
     "execution_count": 543,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "# create a bar chart for age distribution of customers\n",
    "age_bar=df_unique_customers['age_profile'].value_counts().plot.bar(color=['peru', 'sandybrown', 'peachpuff'])\n",
    "plt.title('Age Distribution', fontsize=20)\n",
    "plt.xlabel('Age Groups', fontsize=15)\n",
    "plt.ylabel('Number of Customers', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 727,
   "id": "62413c29",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:57:54.905331Z",
     "start_time": "2022-11-08T18:57:54.795369Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar chart\n",
    "age_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_age_distribution_customers.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7aad0cff",
   "metadata": {},
   "source": [
    "#### 7b. Parental-Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 545,
   "id": "a0c9547b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T17:51:13.611520Z",
     "start_time": "2022-11-08T17:51:13.430301Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Customers')"
      ]
     },
     "execution_count": 545,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "# create a bar chart for parental age distribution of customers\n",
    "parental_age_bar=df_unique_customers['parental_age_profile'].value_counts().plot.bar(color=['darkred', 'indianred', 'lightcoral'])\n",
    "plt.title('Parental Age Distribuition', fontsize=20)\n",
    "plt.xlabel('Parental-Age', fontsize=15)\n",
    "plt.ylabel('Number of Customers', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 546,
   "id": "a0b44bd6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T17:51:19.550280Z",
     "start_time": "2022-11-08T17:51:19.490221Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar chart\n",
    "parental_age_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_parental_age_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe552997",
   "metadata": {},
   "source": [
    "#### 7c. Single Parent Profile "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 547,
   "id": "6c413987",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T17:51:38.119549Z",
     "start_time": "2022-11-08T17:51:37.950835Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Customers')"
      ]
     },
     "execution_count": 547,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "#create a bar chart of single parent distribution of customers\n",
    "relationship_single_parent_bar=df_unique_customers['parental_relationship_status'].value_counts().plot.bar(color=['darkseagreen', 'olivedrab', 'teal', 'powderblue', 'bisque', 'orange'])\n",
    "plt.title('Relationship-Age Distributions', fontsize=20)\n",
    "plt.xlabel('Relationship-Age Group', fontsize=15)\n",
    "plt.ylabel('Number of Customers', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 548,
   "id": "99004155",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T17:52:02.366125Z",
     "start_time": "2022-11-08T17:52:02.311010Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar chart\n",
    "relationship_single_parent_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_relationship_single_parent_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb6254bc",
   "metadata": {},
   "source": [
    "#### 7d. Relationship-age status distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 623,
   "id": "61349616",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:10.023967Z",
     "start_time": "2022-11-08T18:26:07.614665Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Customers')"
      ]
     },
     "execution_count": 623,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "#create a bar chart of relationship-age distribution of customers\n",
    "relationship_age_bar=df_unique_customers['relationship_age_status'].value_counts().plot.bar(color=['darkseagreen', 'olivedrab', 'teal', 'powderblue', 'bisque', 'orange'])\n",
    "plt.title('Relationship-Age Distributions', fontsize=20)\n",
    "plt.xlabel('Relationship-Age Status',  fontsize=15)\n",
    "plt.ylabel('Number of Customers', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 624,
   "id": "716ccd27",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:10.097416Z",
     "start_time": "2022-11-08T18:26:10.025670Z"
    }
   },
   "outputs": [],
   "source": [
    "#export bar chart\n",
    "relationship_age_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_relationship_age_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "356ec936",
   "metadata": {},
   "source": [
    "#### 7e. Income profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 729,
   "id": "0e4b640d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:58:52.098478Z",
     "start_time": "2022-11-08T18:58:51.948053Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Income Group')"
      ]
     },
     "execution_count": 729,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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goOD9e677/7l/JSUlHRjLi7p/3q32Wx/edw7paamys3NTW5ubpJurU+/M1xISvPG08nJyT43Ixm9ub59nDuDwd34+/tr5cqVGX7qnZqaqgEDBqhjx472T+v/LDk52f7nJ598Ups3b9a2bdu0bds2RUZGasGCBVq8eLEee+yxNM/L7LxSUlLSvNYZve6ZvTm/fc7Lli1L8yb/z8f787ZWrVqpfv362rx5s7Zv36533nlHH374oT799NM0oQwA7oaPDQAgD6pUqZIGDhyoefPmpbmB9/Ybx7i4OPvYsWPHsuSYtz+ZlqQrV67o999/V6VKleTt7S1XV1edP39e3t7e9n/WrFlzT1cqHnvsMe3du1dJSUn2sd9++01Xr15VxYoVHdpHcHCwrl27pqVLl6bbtnbtWm3evNn+RtjV1VWxsbH27ampqTp58qT98f/93//phx9+UIsWLfTGG28oOjpaqamp2rRpk6S0oal8+fJydXXV999/n+aY33//fbrA4KjbS4AuXryY5nX98MMP9fXXX2f4nOTkZE2bNk2nT59WYGCgpkyZorVr1+r06dPauXPnfdUBwExcCQCAPKp///766quv0nzzy4MPPqiyZcvqww8/lJeXly5duqTZs2f/5af8jpgxY4Y8PDxUpkwZzZgxQw888IDatGkjNzc39enTRzNnzlThwoVVrVo1bdq0SW+//bYmT57s8P579eqlxYsXa8yYMerfv7+uXr2qSZMmqXLlyqpXr55D+/Dx8VFYWJgmT56sP/74Q23atJGLi4s2b96sOXPmqFevXnryySclSX5+fvrwww+1detWeXl5aeHChbp27Zp9X6dPn9bq1as1ceJElStXTtu3b9f169ftXy9auHBhnTp1SqdPn1bZsmUVGhqq2bNny8PDQ5UrV1Z0dLSio6Pv+7cdvL291aZNG7322muaMGGCKlSooBUrVmjZsmVasGBBhs9xcXHRL7/8ot27d2v8+PEqWbKk1qxZI1dXVz3xxBP3VQcAMxECACCPcnFxUUREhLp06WIfs9lsmj59uiIiItS+fXt5e3trzJgxmf6w1r0YNGiQJk+erLNnz6p27dr64IMP7MtShg4dKldXV02fPl0XLlyQl5eXwsPD1bFjR4f3/8ADD2jBggWaMWOGOnXqpEKFCqlZs2Z65ZVXHF4OdLvOihUratGiRVq2bJkSExNVoUIFjRs3Tp06dbLPe/7553XixAkNHjxYbm5u6ty5s9q2bWvfPn78eE2bNk0jRozQlStX5O3trSlTpthvnu7Zs6dGjhypNm3aaMOGDfZ7IiIiInT58mVVrFhRb775plq3bu1w7X82adIkzZw5U2PHjtX169dVsWJFzZ07966haObMmYqIiFD//v0VFxenSpUq6e233063VAsA7sZm8WsoAAAAgFG4JwAAAAAwDCEAAAAAMAwhAAAAADAMIQAAAAAwDCEAAAAAMAwhAAAAADAMIQAAAAAwDCEAAAAAMMz/A6NwbWq6Lnv9AAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "# Bar chart for age distribution of customers\n",
    "bar=df_unique_customers['income_profile'].value_counts().sort_values().plot.barh(color='lightsteelblue', fontsize=12)\n",
    "plt.title('Income distribution',  fontsize=20)\n",
    "plt.xlabel('Number of Customers', fontsize=15)\n",
    "plt.ylabel('Income Group', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 730,
   "id": "28d981ab",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:59:19.159980Z",
     "start_time": "2022-11-08T18:59:19.088821Z"
    }
   },
   "outputs": [],
   "source": [
    "# Export bar chart\n",
    "bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'income_distribution_of_customres.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 732,
   "id": "270904e5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:01:07.426959Z",
     "start_time": "2022-11-08T19:01:07.265118Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Income Group')"
      ]
     },
     "execution_count": 732,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 12,8\n",
    "sns.set(rc = {'figure.figsize':(12,8)})\n",
    "# create bar chart of income distribution \n",
    "economic_group_bar=df_unique_customers['income_profile'].value_counts().plot.barh(color=['darkcyan', 'lightseagreen', 'mediumturquoise'])\n",
    "plt.title('Income Distributions', fontsize=20)\n",
    "plt.xlabel('Number of Customers', fontsize=15)\n",
    "plt.ylabel('Income Group', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 733,
   "id": "a6bf16ea",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:01:11.313760Z",
     "start_time": "2022-11-08T19:01:11.245335Z"
    }
   },
   "outputs": [],
   "source": [
    "# Export bar chart\n",
    "economic_group_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'income_distribution.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 629,
   "id": "79f29b02",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:10.854815Z",
     "start_time": "2022-11-08T18:26:10.571072Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Customers')"
      ]
     },
     "execution_count": 629,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# historgram of income distribution\n",
    "hist=df_unique_customers['income'].plot.hist(bins=30, color='navajowhite')\n",
    "plt.title('Income distribution', fontsize=20)\n",
    "plt.xlabel('Income',  fontsize=15)\n",
    "plt.ylabel('Number of Customers', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 734,
   "id": "139a013f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:01:37.518630Z",
     "start_time": "2022-11-08T19:01:37.423568Z"
    }
   },
   "outputs": [],
   "source": [
    "# Export histogram\n",
    "hist.figure.savefig(os.path.join(path, '04 Analysis','Visualizations', 'income_distribution_hist.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c409d455",
   "metadata": {},
   "source": [
    "#### 7f. Gender Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 631,
   "id": "2e100ea7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.047242Z",
     "start_time": "2022-11-08T18:26:10.938364Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Gender Distribution'}, ylabel='gender'>"
      ]
     },
     "execution_count": 631,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a pie chart of gender distribution of customers\n",
    "labels= ['Male', 'Female']\n",
    "gender_pie=df_unique_customers['gender'].value_counts().plot.pie(autopct=('%1.f%%'), colors=['lightblue', 'pink'],\n",
    "textprops={'fontsize': 20})\n",
    "gender_pie.set_title(\"Gender Distribution\",fontsize=20)\n",
    "gender_pie"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 632,
   "id": "21235fca",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.092899Z",
     "start_time": "2022-11-08T18:26:11.053924Z"
    }
   },
   "outputs": [],
   "source": [
    "# Export pie\n",
    "gender_pie.figure.savefig(os.path.join(path, '04 Analysis','Visualizations', 'gender_distribution_pie.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "68d15392",
   "metadata": {},
   "source": [
    "#### 7g. Deparments Profiles - Alcohol, Baby items, International items"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc4db329",
   "metadata": {},
   "source": [
    "#### Alcohol profile\n",
    "\n",
    "0 means they did not buy alcohol and 1 means that they did buy alcohol"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 633,
   "id": "574462ee",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.103218Z",
     "start_time": "2022-11-08T18:26:11.095302Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    149480\n",
       "1     13151\n",
       "Name: alcohol_flag, dtype: int64"
      ]
     },
     "execution_count": 633,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers['alcohol_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 634,
   "id": "16c8dd18",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.230655Z",
     "start_time": "2022-11-08T18:26:11.105301Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'Alcohol Purchases'}>"
      ]
     },
     "execution_count": 634,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a pie chart for customers who have bought alcohol\n",
    "alcohol_pie=df_unique_customers['alcohol_flag'].value_counts().plot.pie(label='', labels=['has not purchased alochol', 'has purchased alcohol'], autopct=('%1.f%%'), colors= ['steelblue', 'cornflowerblue'],\n",
    "textprops={'fontsize': 20})\n",
    "alcohol_pie.set_title(\"Alcohol Purchases\",fontsize=20)\n",
    "alcohol_pie                                                                       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 635,
   "id": "fad576ac",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.276237Z",
     "start_time": "2022-11-08T18:26:11.233188Z"
    }
   },
   "outputs": [],
   "source": [
    "#export pie chart\n",
    "alcohol_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pei_alcohol_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88e0294c",
   "metadata": {},
   "source": [
    "#### Baby Profile  \n",
    "\n",
    "0 means that they have not purchased baby supplies, and 1 means that they have purchased baby supples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 636,
   "id": "da101e55",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.284849Z",
     "start_time": "2022-11-08T18:26:11.278272Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    132401\n",
       "1     30230\n",
       "Name: baby_flag, dtype: int64"
      ]
     },
     "execution_count": 636,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers['baby_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 637,
   "id": "3630214e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.406274Z",
     "start_time": "2022-11-08T18:26:11.287711Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Baby Items Purchases')"
      ]
     },
     "execution_count": 637,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a pie chart for customers that have bought baby supplies\n",
    "baby_pie=df_unique_customers['baby_flag'].value_counts().plot.pie(label='', labels= ['has not purchased baby supplies','purchased baby supplies'], autopct=('%1.f%%'), colors= ['skyblue', 'lightpink'],\n",
    "textprops={'fontsize': 20})\n",
    "baby_pie.set_title(\"Baby Items Purchases\",fontsize=20)                                                             "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 638,
   "id": "99340a96",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.452705Z",
     "start_time": "2022-11-08T18:26:11.408872Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "baby_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_baby_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d71f1d18",
   "metadata": {},
   "source": [
    "#### Pet Profile  \n",
    "\n",
    "0 means that they have not purchased pet products and 1 means that they have purchased pet products"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 639,
   "id": "6a19b0e0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.463367Z",
     "start_time": "2022-11-08T18:26:11.455194Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    132401\n",
       "1     30230\n",
       "Name: pet_flag, dtype: int64"
      ]
     },
     "execution_count": 639,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers['pet_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 640,
   "id": "28c25087",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.575387Z",
     "start_time": "2022-11-08T18:26:11.465810Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Pet Items Purchases')"
      ]
     },
     "execution_count": 640,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a pie chart for customers who have bought pet products\n",
    "pet_pie=df_unique_customers['pet_flag'].value_counts().plot.pie(label='', labels=['have not purchased pet supplies', 'purchased pet supplies'], autopct=('%1.f%%'), colors= ['mediumorchid', 'plum'],\n",
    "textprops={'fontsize': 20})\n",
    "pet_pie.set_title(\"Pet Items Purchases\",fontsize=20)                                                               "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 641,
   "id": "a43d1117",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.625552Z",
     "start_time": "2022-11-08T18:26:11.577907Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "pet_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_pet_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e398cb9",
   "metadata": {},
   "source": [
    "#### International Buyer Profile  \n",
    "\n",
    "0 means that they have not purchased pet products and 1 means that they have purchased intornational products"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 642,
   "id": "e922247a",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.635188Z",
     "start_time": "2022-11-08T18:26:11.627842Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    94090\n",
       "1    68541\n",
       "Name: international_flag, dtype: int64"
      ]
     },
     "execution_count": 642,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers['international_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 643,
   "id": "72f7d63c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.762417Z",
     "start_time": "2022-11-08T18:26:11.637622Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'International Items Purchases')"
      ]
     },
     "execution_count": 643,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a pie chart for customers who purchased international items at least 1x\n",
    "international_pie=df_unique_customers['international_flag'].value_counts().plot.pie(label='', labels=['have not purchased international items', 'purchased international items'], autopct=('%1.f%%'), colors= ['olivedrab', 'yellowgreen'],\n",
    "textprops={'fontsize': 20})\n",
    "international_pie.set_title(\"International Items Purchases\",fontsize=20)                                                                                    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 644,
   "id": "0674a43c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.815000Z",
     "start_time": "2022-11-08T18:26:11.765652Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "international_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_international_distribution.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be4ab008",
   "metadata": {
    "ExecuteTime": {
     "start_time": "2022-11-03T13:42:10.568Z"
    }
   },
   "source": [
    "### 8. Aggregating the max, mean, and min variables on a customer-profile level for usage frequency and expenditure."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed6cf88e",
   "metadata": {},
   "source": [
    "#### 8a. Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 645,
   "id": "d847a88e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.852682Z",
     "start_time": "2022-11-08T18:26:11.817245Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>7.640712</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>7.598647</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>7.593288</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               prices           \n",
       "                 mean  min   max\n",
       "age_profile                     \n",
       "Mid Adult    7.640712  1.0  15.0\n",
       "Senior       7.598647  1.0  19.4\n",
       "Young Adult  7.593288  1.0  15.0"
      ]
     },
     "execution_count": 645,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for age profile expenditure\n",
    "df_unique_customers.groupby('age_profile').agg({'prices': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 646,
   "id": "f34ded41",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.886121Z",
     "start_time": "2022-11-08T18:26:11.855638Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>2.832347</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>2.827329</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>2.821548</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            orders_day_of_week        \n",
       "                          mean min max\n",
       "age_profile                           \n",
       "Mid Adult             2.832347   0   6\n",
       "Senior                2.827329   0   6\n",
       "Young Adult           2.821548   0   6"
      ]
     },
     "execution_count": 646,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for age profile orders_day_of_week\n",
    "df_unique_customers.groupby('age_profile').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 647,
   "id": "9ac4494f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.922823Z",
     "start_time": "2022-11-08T18:26:11.889444Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>13.782009</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>13.717052</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>13.776950</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            median_days_since_prior_order           \n",
       "                                     mean  min   max\n",
       "age_profile                                         \n",
       "Mid Adult                       13.782009  0.0  30.0\n",
       "Senior                          13.717052  0.0  30.0\n",
       "Young Adult                     13.776950  0.0  30.0"
      ]
     },
     "execution_count": 647,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for age profile order_hour_of_day\n",
    "df_unique_customers.groupby('age_profile').agg({'median_days_since_prior_order': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c416e6fb",
   "metadata": {},
   "source": [
    "#### 8b. Parental Age Profile "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 648,
   "id": "22087e15",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:11.968250Z",
     "start_time": "2022-11-08T18:26:11.925730Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parental_age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Parent</th>\n",
       "      <td>7.623585</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Older Parent</th>\n",
       "      <td>7.634685</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Parent</th>\n",
       "      <td>7.587213</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        prices           \n",
       "                          mean  min   max\n",
       "parental_age_profile                     \n",
       "Mid Parent            7.623585  1.0  15.0\n",
       "Older Parent          7.634685  1.0  19.4\n",
       "Young Parent          7.587213  1.0  15.0"
      ]
     },
     "execution_count": 648,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for parental age profile group expenditure\n",
    "df_unique_customers.groupby('parental_age_profile').agg({'prices': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 649,
   "id": "e15ea11d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.011194Z",
     "start_time": "2022-11-08T18:26:11.971586Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parental_age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Parent</th>\n",
       "      <td>13.747817</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Older Parent</th>\n",
       "      <td>13.780950</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Parent</th>\n",
       "      <td>13.707528</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     median_days_since_prior_order           \n",
       "                                              mean  min   max\n",
       "parental_age_profile                                         \n",
       "Mid Parent                               13.747817  0.0  30.0\n",
       "Older Parent                             13.780950  0.0  30.0\n",
       "Young Parent                             13.707528  0.0  30.0"
      ]
     },
     "execution_count": 649,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for parental age profile order frequency median_days_since_prior_order\n",
    "df_unique_customers.groupby('parental_age_profile').agg({'median_days_since_prior_order': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 650,
   "id": "452e168c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.036658Z",
     "start_time": "2022-11-08T18:26:12.014262Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>2.832347</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>2.827329</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>2.821548</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            orders_day_of_week        \n",
       "                          mean min max\n",
       "age_profile                           \n",
       "Mid Adult             2.832347   0   6\n",
       "Senior                2.827329   0   6\n",
       "Young Adult           2.821548   0   6"
      ]
     },
     "execution_count": 650,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for age parental age profile orders_day_of_week\n",
    "df_unique_customers.groupby('age_profile').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd76b46a",
   "metadata": {},
   "source": [
    "#### 8c. Single Parent Profile (Dependants Profile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 651,
   "id": "72162ad3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.075881Z",
     "start_time": "2022-11-08T18:26:12.039019Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parental_relationship_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Nuclear Family</th>\n",
       "      <td>7.622999</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Parent</th>\n",
       "      <td>7.641180</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                prices           \n",
       "                                  mean  min   max\n",
       "parental_relationship_status                     \n",
       "Nuclear Family                7.622999  1.0  19.4\n",
       "Single Parent                 7.641180  1.0  15.0"
      ]
     },
     "execution_count": 651,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Relationship Single Profile expenditure\n",
    "df_unique_customers.groupby('parental_relationship_status').agg({'prices': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 652,
   "id": "7ec3ef4e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.120742Z",
     "start_time": "2022-11-08T18:26:12.078684Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parental_relationship_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Nuclear Family</th>\n",
       "      <td>2.831586</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Parent</th>\n",
       "      <td>2.825184</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             orders_day_of_week        \n",
       "                                           mean min max\n",
       "parental_relationship_status                           \n",
       "Nuclear Family                         2.831586   0   6\n",
       "Single Parent                          2.825184   0   6"
      ]
     },
     "execution_count": 652,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate forRelationship Single Profile orders_day_of_week\n",
    "df_unique_customers.groupby('parental_relationship_status').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 653,
   "id": "9905352e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.161959Z",
     "start_time": "2022-11-08T18:26:12.123761Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>parental_relationship_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Nuclear Family</th>\n",
       "      <td>13.766755</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Parent</th>\n",
       "      <td>13.693086</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             median_days_since_prior_order           \n",
       "                                                      mean  min   max\n",
       "parental_relationship_status                                         \n",
       "Nuclear Family                                   13.766755  0.0  30.0\n",
       "Single Parent                                    13.693086  0.0  30.0"
      ]
     },
     "execution_count": 653,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Relationship Single Profile order frequency median_days_since_prior_order\n",
    "df_unique_customers.groupby('parental_relationship_status').agg({'median_days_since_prior_order': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1174ebde",
   "metadata": {},
   "source": [
    "#### 8d. Income Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 654,
   "id": "169bc321",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.198692Z",
     "start_time": "2022-11-08T18:26:12.164419Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High Class</th>\n",
       "      <td>7.773853</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low Class</th>\n",
       "      <td>6.857645</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid Class</th>\n",
       "      <td>7.758695</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  prices           \n",
       "                    mean  min   max\n",
       "income_profile                     \n",
       "High Class      7.773853  1.0  15.0\n",
       "Low Class       6.857645  1.0  15.0\n",
       "Mid Class       7.758695  1.0  19.4"
      ]
     },
     "execution_count": 654,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Income Profile expenditure\n",
    "df_unique_customers.groupby('income_profile').agg({'prices': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 655,
   "id": "a97cde38",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.231803Z",
     "start_time": "2022-11-08T18:26:12.201113Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High Class</th>\n",
       "      <td>2.849081</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low Class</th>\n",
       "      <td>2.819744</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid Class</th>\n",
       "      <td>2.826887</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               orders_day_of_week        \n",
       "                             mean min max\n",
       "income_profile                           \n",
       "High Class               2.849081   0   6\n",
       "Low Class                2.819744   0   6\n",
       "Mid Class                2.826887   0   6"
      ]
     },
     "execution_count": 655,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Income Profile orders_day_of_week\n",
    "df_unique_customers.groupby('income_profile').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 656,
   "id": "36a8ab61",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.264579Z",
     "start_time": "2022-11-08T18:26:12.234193Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High Class</th>\n",
       "      <td>13.377465</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low Class</th>\n",
       "      <td>14.700282</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid Class</th>\n",
       "      <td>13.626360</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               median_days_since_prior_order           \n",
       "                                        mean  min   max\n",
       "income_profile                                         \n",
       "High Class                         13.377465  0.0  30.0\n",
       "Low Class                          14.700282  0.0  30.0\n",
       "Mid Class                          13.626360  0.0  30.0"
      ]
     },
     "execution_count": 656,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Income Profile order frequencies\n",
    "df_unique_customers.groupby('income_profile').agg({'median_days_since_prior_order': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a25c62e7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-07T10:15:42.836818Z",
     "start_time": "2022-11-07T10:15:42.831920Z"
    }
   },
   "source": [
    "#### 8e. Relationship-Age Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 657,
   "id": "e6577d7b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.289320Z",
     "start_time": "2022-11-08T18:26:12.266703Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>relationship_age_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Married Mid Adult</th>\n",
       "      <td>7.649536</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married Senior</th>\n",
       "      <td>7.597373</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married Young Adult</th>\n",
       "      <td>7.571137</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Mid Adult</th>\n",
       "      <td>7.614343</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Senior</th>\n",
       "      <td>7.602523</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Young Adult</th>\n",
       "      <td>7.616912</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           prices           \n",
       "                             mean  min   max\n",
       "relationship_age_status                     \n",
       "Married Mid Adult        7.649536  1.0  15.0\n",
       "Married Senior           7.597373  1.0  19.4\n",
       "Married Young Adult      7.571137  1.0  15.0\n",
       "Single Mid Adult         7.614343  1.0  15.0\n",
       "Single Senior            7.602523  1.0  15.0\n",
       "Single Young Adult       7.616912  1.0  15.0"
      ]
     },
     "execution_count": 657,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Relationship Parental Age Profile expenditure\n",
    "df_unique_customers.groupby('relationship_age_status').agg({'prices' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 658,
   "id": "7c724866",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.316898Z",
     "start_time": "2022-11-08T18:26:12.291272Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High Class</th>\n",
       "      <td>2.849081</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low Class</th>\n",
       "      <td>2.819744</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid Class</th>\n",
       "      <td>2.826887</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               orders_day_of_week        \n",
       "                             mean min max\n",
       "income_profile                           \n",
       "High Class               2.849081   0   6\n",
       "Low Class                2.819744   0   6\n",
       "Mid Class                2.826887   0   6"
      ]
     },
     "execution_count": 658,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Relationship Parental Age Profile orders_day_of_week\n",
    "df_unique_customers.groupby('income_profile').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 659,
   "id": "24562015",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.362452Z",
     "start_time": "2022-11-08T18:26:12.330893Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>relationship_age_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Married Mid Adult</th>\n",
       "      <td>13.780078</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married Senior</th>\n",
       "      <td>13.750945</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Married Young Adult</th>\n",
       "      <td>13.746346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Mid Adult</th>\n",
       "      <td>13.787775</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Senior</th>\n",
       "      <td>13.613987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Single Young Adult</th>\n",
       "      <td>13.809592</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        median_days_since_prior_order           \n",
       "                                                 mean  min   max\n",
       "relationship_age_status                                         \n",
       "Married Mid Adult                           13.780078  0.0  30.0\n",
       "Married Senior                              13.750945  0.0  30.0\n",
       "Married Young Adult                         13.746346  0.0  30.0\n",
       "Single Mid Adult                            13.787775  0.0  30.0\n",
       "Single Senior                               13.613987  0.0  30.0\n",
       "Single Young Adult                          13.809592  0.0  30.0"
      ]
     },
     "execution_count": 659,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Relationship Parental Age Profile order frequencies\n",
    "df_unique_customers.groupby('relationship_age_status').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c844dfa",
   "metadata": {},
   "source": [
    "#### 8f. Gender Profile"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 660,
   "id": "489b3578",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.389619Z",
     "start_time": "2022-11-08T18:26:12.364600Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>7.613719</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>7.625980</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          prices           \n",
       "            mean  min   max\n",
       "gender                     \n",
       "Female  7.613719  1.0  15.0\n",
       "Male    7.625980  1.0  19.4"
      ]
     },
     "execution_count": 660,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Genrer Profile expenditure\n",
    "df_unique_customers.groupby('gender').agg({'prices' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 661,
   "id": "d71ce7ab",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.414425Z",
     "start_time": "2022-11-08T18:26:12.391660Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>2.826399</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>2.831203</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       orders_day_of_week        \n",
       "                     mean min max\n",
       "gender                           \n",
       "Female           2.826399   0   6\n",
       "Male             2.831203   0   6"
      ]
     },
     "execution_count": 661,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Genrer Profile orders_day_of_week\n",
    "df_unique_customers.groupby('gender').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 662,
   "id": "172d5f71",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.438679Z",
     "start_time": "2022-11-08T18:26:12.416583Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>gender</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Female</th>\n",
       "      <td>13.762269</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Male</th>\n",
       "      <td>13.765122</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       median_days_since_prior_order           \n",
       "                                mean  min   max\n",
       "gender                                         \n",
       "Female                     13.762269  0.0  30.0\n",
       "Male                       13.765122  0.0  30.0"
      ]
     },
     "execution_count": 662,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Relationship Genrer Profile order frequencies\n",
    "df_unique_customers.groupby('gender').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37dd6ff8",
   "metadata": {},
   "source": [
    "#### 8g. Departments Profiles - Alcohol, Baby items, International items"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 663,
   "id": "16bc3195",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.456657Z",
     "start_time": "2022-11-08T18:26:12.441106Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>alcohol_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.616542</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7.658098</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                prices           \n",
       "                  mean  min   max\n",
       "alcohol_flag                     \n",
       "0             7.616542  1.0  19.4\n",
       "1             7.658098  1.0  15.0"
      ]
     },
     "execution_count": 663,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Alcohol flag expenditures\n",
    "df_unique_customers.groupby('alcohol_flag').agg({'prices' : ['mean', 'min', 'max' ]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 664,
   "id": "9db4a3d3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.474434Z",
     "start_time": "2022-11-08T18:26:12.459089Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>alcohol_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.814082</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.996350</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             orders_day_of_week        \n",
       "                           mean min max\n",
       "alcohol_flag                           \n",
       "0                      2.814082   0   6\n",
       "1                      2.996350   0   6"
      ]
     },
     "execution_count": 664,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Alcohol flag orders_day_of_week\n",
    "df_unique_customers.groupby('alcohol_flag').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 665,
   "id": "e8d17354",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.492963Z",
     "start_time": "2022-11-08T18:26:12.476528Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>alcohol_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>13.838614</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12.912288</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             median_days_since_prior_order           \n",
       "                                      mean  min   max\n",
       "alcohol_flag                                         \n",
       "0                                13.838614  0.0  30.0\n",
       "1                                12.912288  0.0  30.0"
      ]
     },
     "execution_count": 665,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Alcohol_flag order frequencies\n",
    "df_unique_customers.groupby('alcohol_flag').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 666,
   "id": "1afad8c9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.511410Z",
     "start_time": "2022-11-08T18:26:12.495509Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>baby_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.621146</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7.614446</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             prices           \n",
       "               mean  min   max\n",
       "baby_flag                     \n",
       "0          7.621146  1.0  19.4\n",
       "1          7.614446  1.0  15.0"
      ]
     },
     "execution_count": 666,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Baby_flag expenditures\n",
    "df_unique_customers.groupby('baby_flag').agg({'prices' : ['mean', 'min', 'max' ]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 667,
   "id": "b8e73c50",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.528074Z",
     "start_time": "2022-11-08T18:26:12.513514Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>baby_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.829405</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.826265</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          orders_day_of_week        \n",
       "                        mean min max\n",
       "baby_flag                           \n",
       "0                   2.829405   0   6\n",
       "1                   2.826265   0   6"
      ]
     },
     "execution_count": 667,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Baby_flag orders_day_of_week\n",
    "df_unique_customers.groupby('baby_flag').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 668,
   "id": "864ee618",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.548139Z",
     "start_time": "2022-11-08T18:26:12.530542Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>baby_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14.314280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11.352316</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          median_days_since_prior_order           \n",
       "                                   mean  min   max\n",
       "baby_flag                                         \n",
       "0                             14.314280  0.0  30.0\n",
       "1                             11.352316  0.0  30.0"
      ]
     },
     "execution_count": 668,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Baby_flag order frequencies\n",
    "df_unique_customers.groupby('baby_flag').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 669,
   "id": "b8fecf6f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.565527Z",
     "start_time": "2022-11-08T18:26:12.550245Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pet_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.621146</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7.614446</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            prices           \n",
       "              mean  min   max\n",
       "pet_flag                     \n",
       "0         7.621146  1.0  19.4\n",
       "1         7.614446  1.0  15.0"
      ]
     },
     "execution_count": 669,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Pet_flag expenditures\n",
    "df_unique_customers.groupby('pet_flag').agg({'prices' : ['mean', 'min', 'max' ]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 670,
   "id": "2af14dc4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.581883Z",
     "start_time": "2022-11-08T18:26:12.567252Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pet_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.829405</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.826265</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         orders_day_of_week        \n",
       "                       mean min max\n",
       "pet_flag                           \n",
       "0                  2.829405   0   6\n",
       "1                  2.826265   0   6"
      ]
     },
     "execution_count": 670,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for Pet_flag orders_day_of_week\n",
    "df_unique_customers.groupby('pet_flag').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 671,
   "id": "16e43b24",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.599354Z",
     "start_time": "2022-11-08T18:26:12.584224Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pet_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14.314280</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11.352316</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         median_days_since_prior_order           \n",
       "                                  mean  min   max\n",
       "pet_flag                                         \n",
       "0                            14.314280  0.0  30.0\n",
       "1                            11.352316  0.0  30.0"
      ]
     },
     "execution_count": 671,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate Pet_flag order frequencies\n",
    "df_unique_customers.groupby('pet_flag').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 672,
   "id": "a3ca5599",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.617089Z",
     "start_time": "2022-11-08T18:26:12.601678Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">prices</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>international_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7.577745</td>\n",
       "      <td>1.0</td>\n",
       "      <td>19.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7.677763</td>\n",
       "      <td>1.0</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                      prices           \n",
       "                        mean  min   max\n",
       "international_flag                     \n",
       "0                   7.577745  1.0  19.4\n",
       "1                   7.677763  1.0  15.0"
      ]
     },
     "execution_count": 672,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate International_flag expenditures\n",
    "df_unique_customers.groupby('international_flag').agg({'prices' : ['mean', 'min', 'max' ]})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 673,
   "id": "dcb89822",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.634041Z",
     "start_time": "2022-11-08T18:26:12.619061Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">orders_day_of_week</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>international_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.842417</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.810157</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   orders_day_of_week        \n",
       "                                 mean min max\n",
       "international_flag                           \n",
       "0                            2.842417   0   6\n",
       "1                            2.810157   0   6"
      ]
     },
     "execution_count": 673,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate for International_flag orders_day_of_week\n",
    "df_unique_customers.groupby('international_flag').agg({'orders_day_of_week': ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 674,
   "id": "038842a0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.651241Z",
     "start_time": "2022-11-08T18:26:12.636049Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"3\" halign=\"left\">median_days_since_prior_order</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>international_flag</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>14.916479</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>12.181235</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   median_days_since_prior_order           \n",
       "                                            mean  min   max\n",
       "international_flag                                         \n",
       "0                                      14.916479  0.0  30.0\n",
       "1                                      12.181235  0.0  30.0"
      ]
     },
     "execution_count": 674,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# aggregate International_flag order frequencies\n",
    "df_unique_customers.groupby('international_flag').agg({'median_days_since_prior_order' : ['mean', 'min', 'max']})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8325c969",
   "metadata": {},
   "source": [
    "### 9. Comparison Visualizations customer profiles with regions and departments\n",
    "\n",
    "Can you identify a link between them? Customers may demonstrate different behaviors across regions, which could make this information important."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26c0de84",
   "metadata": {},
   "source": [
    "#### 9a. Region Distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 874,
   "id": "4c8bc6de",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T21:44:14.750978Z",
     "start_time": "2022-11-08T21:44:14.570684Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f699867d850>"
      ]
     },
     "execution_count": 874,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAoYAAAH+CAYAAAABE89IAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABJN0lEQVR4nO3deXgN1+PH8U8iiV0EUUosDUlbQUIsia2iKFqltTZirW9qqdpDKapFaS21r6Vaa2uptZRWavlRqkgIYo01CIkkNIlkfn+4bl1ij9zg/XqePE/uOTNnzpyT1KdzZiY2hmEYAgAAwAvP1todAAAAQMZAMAQAAIAkgiEAAABMCIYAAACQRDAEAACACcEQAAAAkgiGwDOpX79+cnd3f+BXv379HrrNqKgoXbt27ZH7EhAQID8/v0fe72lLTExUZGSktbuRLpYuXSp3d3ft2LHD2l15LM9C/0+fPi13d3dNmDDB2l0Bnio7a3cAwKNr3ry5fHx8zJ///vtvLVq0SM2bN1f58uXN5UWKFHmo9oKDg9W7d28tW7ZM2bJlS/P+prczZ86offv2CgwM1HvvvWft7jx1FSpU0KhRo+Tq6mrtrjy38uTJo1GjRsnd3d3aXQGeKoIh8Azy8vKSl5eX+XNycrIWLVokT09Pvfvuu4/c3r59+3T16tW07KJVnT59WidOnLB2N9KNi4uLXFxcrN2N51q2bNke63cLeNawlAwAAABJBEPgubdr1y61bdvWfJWxdevW2rlzp7m+X79+mjhxoiSpVq1aCggIMNf9+uuvatWqlcqXLy8PDw/5+flp1KhRSkxMfOR+HD16VJ988okqVaqk8uXLKyAgQLt27TLX3+texTvLExMTNWzYMNWqVUseHh6qUaOGPv/8c8XExEi6eb9a69atJUn9+/e3WPq7cuWKhgwZomrVqsnDw0N169bV9OnTlZycbN5mwoQJ8vLy0pEjR9SuXTt5enqqWrVqmjFjhgzD0KxZs1SzZk2VK1dOHTp00OnTpy36e/78efXt21eVK1dW6dKl1ahRI61YscJim379+umtt97SvHnzVKFCBVWoUEF//vmnDMPQxIkTVbduXZUuXVq+vr7q06ePzp07d9+xvfMevVufDx48qF69eqlChQry8vJSly5d7upvahISEjR27Fj5+fnJw8NDtWrV0rfffnvXvJ88eVJBQUGqXr26PDw8VLFiRX300UcKDw+32C4xMVETJkxQnTp1VKZMmVTHXbp5n2vv3r3l7e2tcuXKqUuXLjp79uxDnfu6devk5+ensmXLmu8DfNjziIuL0+eff66qVavK09NTH330kf7++2+5u7tr6dKlku59j+FPP/2kd999V6VLl1blypXVq1cvizG+td/y5cs1duxYVa9eXaVLl1bTpk21ffv2B84FkN5YSgaeYxs3blTXrl1VpEgRderUSdLNf8jatm2r8ePHq1atWmrevLni4uL022+/qX///ipZsqR5u4EDB8rPz0+9e/dWUlKSfvvtN82aNUvZsmVT165dH7ofJ06cULNmzWRnZ6dWrVopT548Wrhwodq1a6d58+apTJkyD93W0KFDtWrVKrVu3VouLi4KDw/XvHnzdPLkSX333XeqUKGCPvroI02dOtXinsuYmBi1aNFCZ86cUYsWLVS8eHFt3bpVo0eP1oEDBzRu3DjzMZKSktSmTRu9+eabqlOnjpYsWaJvvvlG27dv15kzZ9SmTRtduXJFM2fOVP/+/fXDDz9IkiIjI9W0aVMZhqGAgAA5Ojpq48aN6tOnjy5cuKAPP/zQfIxz585p0qRJ6tq1qy5cuKCyZctq6tSpmjRpkvz9/eXu7q7Tp09r7ty5Cg0N1apVq5QpU6aHHidJ6tSpk1xdXdWjRw+dOnVK33//vSIjI/Xzzz/fc5/k5GQFBgZq9+7datasmVxdXRUaGqqpU6cqLCxMU6ZMkY2NjS5duqRmzZopR44catWqlZycnBQWFqbFixfr6NGjWrdunWxtb1576NKli/7880+98847ateunfbt26fRo0crKipK/fv3Nx/7008/lbe3t3r37q0jR45o/vz5On36tH755ZcHnmv//v0VEBCgnDlzytPT86HPIzk5WR9++KH27dunDz74QEWLFtXq1avVuXPnBx5z5MiR+u677+Tj46O+ffvqwoUL+vHHH7Vt2zb99NNPKly4sHnbb7/9VlmzZlX79u2VlJSk7777ToGBgdq0aZOcnJweeCwg3RgAnnlLliwx3NzcjCVLlpjLkpKSjOrVqxs1atQwYmNjzeUxMTFGtWrVjGrVqhmJiYmGYRjG+PHjDTc3N+PUqVPm7d566y2jefPmRkpKyl1tvv322+ayVq1aGTVr1rxv/z755BOjTJkyxokTJ8xlly9f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\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Total customers across regions\n",
    "bar_total_customers=df_unique_customers['region'].value_counts(dropna=False).sort_values(ascending=True).plot.barh(color='teal', fontsize=15)\n",
    "plt.title('Total customers in each region', fontsize=18)\n",
    "plt.xlabel('Number of customers', fontsize=15)\n",
    "plt.legend(fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 876,
   "id": "6d072175",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T21:44:35.805389Z",
     "start_time": "2022-11-08T21:44:35.748641Z"
    }
   },
   "outputs": [],
   "source": [
    "# Export bar chart\n",
    "bar_total_customers.figure.savefig(os.path.join(path, '04 Analysis','Visualizations', 'bar_total_customers.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 826,
   "id": "57ff83d1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:34:05.239877Z",
     "start_time": "2022-11-08T20:34:05.068183Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.000104</td>\n",
       "      <td>0.319809</td>\n",
       "      <td>0.680087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.000140</td>\n",
       "      <td>0.323817</td>\n",
       "      <td>0.676044</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.000074</td>\n",
       "      <td>0.323953</td>\n",
       "      <td>0.675973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.000217</td>\n",
       "      <td>0.320749</td>\n",
       "      <td>0.679034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc  High-range product  Low-range product  Mid-range product\n",
       "region                                                                   \n",
       "Midwest                    0.000104           0.319809           0.680087\n",
       "Northeast                  0.000140           0.323817           0.676044\n",
       "South                      0.000074           0.323953           0.675973\n",
       "West                       0.000217           0.320749           0.679034"
      ]
     },
     "execution_count": 826,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Crosst tab product Price Range\n",
    "ppr_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['price_range_loc'].sort_values(ascending=False), normalize=\"index\")\n",
    "ppr_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 834,
   "id": "ecfee538",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:44:24.726208Z",
     "start_time": "2022-11-08T20:44:24.536584Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f6996827fa0>"
      ]
     },
     "execution_count": 834,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Grouped bar chart of price range products by regions\n",
    "bar_ppr_region=ppr_region.plot.bar(color=['teal', 'goldenrod', 'darkkhaki'], fontsize=12)\n",
    "plt.title('Distribution price ranges in US regions', fontsize=20)\n",
    "plt.legend(ncol=3, fontsize=12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 835,
   "id": "f25d5974",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:44:54.146299Z",
     "start_time": "2022-11-08T20:44:54.071431Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar chart\n",
    "bar_ppr_region.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_ppr_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 675,
   "id": "54cfab14",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.698060Z",
     "start_time": "2022-11-08T18:26:12.653615Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_profile</th>\n",
       "      <th>Mid Adult</th>\n",
       "      <th>Senior</th>\n",
       "      <th>Young Adult</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.535491</td>\n",
       "      <td>0.264983</td>\n",
       "      <td>0.199526</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.533641</td>\n",
       "      <td>0.265211</td>\n",
       "      <td>0.201148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.528555</td>\n",
       "      <td>0.266326</td>\n",
       "      <td>0.205119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.528652</td>\n",
       "      <td>0.266821</td>\n",
       "      <td>0.204527</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_profile  Mid Adult    Senior  Young Adult\n",
       "region                                       \n",
       "Midwest       0.535491  0.264983     0.199526\n",
       "Northeast     0.533641  0.265211     0.201148\n",
       "South         0.528555  0.266326     0.205119\n",
       "West          0.528652  0.266821     0.204527"
      ]
     },
     "execution_count": 675,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for Region and Age Profile\n",
    "age_region_norm=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['age_profile'], normalize='index')\n",
    "age_region_norm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 962,
   "id": "341c793f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:30:28.349718Z",
     "start_time": "2022-11-08T23:30:28.192976Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 962,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a stacked bar chart for Age Profile by Region\n",
    "age_region_stacked=age_region_norm.plot(kind='bar',\n",
    "                                       stacked= True,\n",
    "                                       color= ['lightcoral', 'indianred', 'lightsalmon'],\n",
    "                                       figsize=(12,10))\n",
    "plt.title('Distribution of Age Groups by Region',  fontsize=20)\n",
    "plt.legend(loc='upper center',  fontsize=15, ncol=3)\n",
    "plt.xlabel('Region')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 963,
   "id": "baa445b1",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:30:34.271277Z",
     "start_time": "2022-11-08T23:30:34.207620Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "age_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_age_profile_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 678,
   "id": "7622ddcd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:12.974191Z",
     "start_time": "2022-11-08T18:26:12.936425Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>age_profile</th>\n",
       "      <th>Mid Adult</th>\n",
       "      <th>Senior</th>\n",
       "      <th>Young Adult</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>20550</td>\n",
       "      <td>10169</td>\n",
       "      <td>7657</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>15252</td>\n",
       "      <td>7580</td>\n",
       "      <td>5749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>28644</td>\n",
       "      <td>14433</td>\n",
       "      <td>11116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>21929</td>\n",
       "      <td>11068</td>\n",
       "      <td>8484</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "age_profile  Mid Adult  Senior  Young Adult\n",
       "region                                     \n",
       "Midwest          20550   10169         7657\n",
       "Northeast        15252    7580         5749\n",
       "South            28644   14433        11116\n",
       "West             21929   11068         8484"
      ]
     },
     "execution_count": 678,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "age_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['age_profile'])\n",
    "age_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 989,
   "id": "79154838",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:24:59.436642Z",
     "start_time": "2022-11-09T00:24:59.202534Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f699a6663a0>"
      ]
     },
     "execution_count": 989,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Setting script figure size to 10,8\n",
    "sns.set(rc = {'figure.figsize':(10,8)})\n",
    "# Grouped bar chart of customer age groups and regions\n",
    "bar_age_region=age_region.plot.bar(color=['peachpuff', 'sandybrown', 'peru'], fontsize=12)\n",
    "plt.title('Distribution of Age Groups US Regions', fontsize=18)\n",
    "plt.xlabel('Region', fontsize=15)\n",
    "plt.ylabel('Number of customers', fontsize=15)\n",
    "plt.legend(fontsize=12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 990,
   "id": "8edbcbd5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:25:03.477697Z",
     "start_time": "2022-11-09T00:25:03.401393Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "bar_age_region.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_age_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 952,
   "id": "d8042c07",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:23:56.678629Z",
     "start_time": "2022-11-08T23:23:55.574939Z"
    }
   },
   "outputs": [],
   "source": [
    "#create a crosstabe for Parental Age Profile and Region\n",
    "parental_age_region_norm=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['parental_relationship_status'], normalize='index')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 953,
   "id": "773b169f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:24:06.584004Z",
     "start_time": "2022-11-08T23:24:06.575844Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>parental_relationship_status</th>\n",
       "      <th>Nuclear Family</th>\n",
       "      <th>Single Parent</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.936133</td>\n",
       "      <td>0.063867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.942511</td>\n",
       "      <td>0.057489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.935950</td>\n",
       "      <td>0.064050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.937709</td>\n",
       "      <td>0.062291</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "parental_relationship_status  Nuclear Family  Single Parent\n",
       "region                                                     \n",
       "Midwest                             0.936133       0.063867\n",
       "Northeast                           0.942511       0.057489\n",
       "South                               0.935950       0.064050\n",
       "West                                0.937709       0.062291"
      ]
     },
     "execution_count": 953,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "parental_age_region_norm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 957,
   "id": "5aba54fe",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:25:26.441290Z",
     "start_time": "2022-11-08T23:25:26.289475Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 957,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create stacked bar chart for parental_relationship status by region\n",
    "parental_relationship_region_stacked=parental_age_region_norm.plot(kind='bar',\n",
    "                                                                      stacked= True,\n",
    "                                                                      color= ['salmon', 'orangered'],\n",
    "                                                                      figsize=(12,10))\n",
    "plt.title('Distribution of Parental Relationship Groups by Region', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3, fontsize=15)\n",
    "plt.xlabel('Region')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 958,
   "id": "a03c2f79",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:25:30.409748Z",
     "start_time": "2022-11-08T23:25:30.347818Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "parental_relationship_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_parental_age_region_stacked.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 686,
   "id": "b3a03e17",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:13.774022Z",
     "start_time": "2022-11-08T18:26:13.726128Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>relationship_age_status</th>\n",
       "      <th>Married Mid Adult</th>\n",
       "      <th>Married Senior</th>\n",
       "      <th>Married Young Adult</th>\n",
       "      <th>Single Mid Adult</th>\n",
       "      <th>Single Senior</th>\n",
       "      <th>Single Young Adult</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.399729</td>\n",
       "      <td>0.200724</td>\n",
       "      <td>0.102330</td>\n",
       "      <td>0.135762</td>\n",
       "      <td>0.064259</td>\n",
       "      <td>0.097196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.401071</td>\n",
       "      <td>0.197334</td>\n",
       "      <td>0.104860</td>\n",
       "      <td>0.132571</td>\n",
       "      <td>0.067877</td>\n",
       "      <td>0.096288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.397081</td>\n",
       "      <td>0.200487</td>\n",
       "      <td>0.104589</td>\n",
       "      <td>0.131475</td>\n",
       "      <td>0.065839</td>\n",
       "      <td>0.100530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.395169</td>\n",
       "      <td>0.201032</td>\n",
       "      <td>0.107109</td>\n",
       "      <td>0.133483</td>\n",
       "      <td>0.065789</td>\n",
       "      <td>0.097418</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "relationship_age_status  Married Mid Adult  Married Senior  \\\n",
       "region                                                       \n",
       "Midwest                           0.399729        0.200724   \n",
       "Northeast                         0.401071        0.197334   \n",
       "South                             0.397081        0.200487   \n",
       "West                              0.395169        0.201032   \n",
       "\n",
       "relationship_age_status  Married Young Adult  Single Mid Adult  Single Senior  \\\n",
       "region                                                                          \n",
       "Midwest                             0.102330          0.135762       0.064259   \n",
       "Northeast                           0.104860          0.132571       0.067877   \n",
       "South                               0.104589          0.131475       0.065839   \n",
       "West                                0.107109          0.133483       0.065789   \n",
       "\n",
       "relationship_age_status  Single Young Adult  \n",
       "region                                       \n",
       "Midwest                            0.097196  \n",
       "Northeast                          0.096288  \n",
       "South                              0.100530  \n",
       "West                               0.097418  "
      ]
     },
     "execution_count": 686,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for Parental Relationship Status by Region\n",
    "parental_relationship_region=pd.crosstab(df_unique_customers['region'], columns=df_unique_customers['relationship_age_status'], normalize='index')\n",
    "parental_relationship_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 932,
   "id": "5921e869",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:09:51.818013Z",
     "start_time": "2022-11-08T23:09:51.623247Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 932,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAsQAAAKKCAYAAAA6B02fAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABt0ElEQVR4nO3deXRM9//H8dckIRFLLA2KokViV3sQ1L5GbUWF2GspSlttlaK11FZqaVFra6l9p6h9V1ttpah9acQuJLLM/f3hl/kaSSQ0TOQ+H+c4x9x759735H7mzmvu/dzPWAzDMAQAAACYlJOjCwAAAAAciUAMAAAAUyMQAwAAwNQIxAAAADA1AjEAAABMjUAMAAAAUyMQm9C4cePk7e1t9y9v3rx6++23Vb16dX311Vf6559/oj3v0qVL8vb2VpcuXZ5ru4cPH9b27dufqcb169cnyLbjsn37dh0+fNj2eM+ePfL29tbgwYNfyPYSWkREhIYNG6Zy5cqpUKFC8vPzi3XZL774Itr+9/b2VsGCBVWmTBm1a9dOW7ZseYnVJ4xr165p0aJFz/38ypUrq0SJEnEuF9P7J+pfkSJFVKlSJX3yyScxvofiKyHa39mzZ/Xbb7/ZTfP29ta777773OtMaM/6Ol90/cePH9fAgQNVt25dlShRQm+//bZq1KihAQMG6MyZMy9su4lVfN8TCbWtmN5T+fLlU4kSJVS/fn2NHz9eoaGhL6WexYsXy9vbWzNmzHgp24PjuTi6ADhOlSpVlC9fPkmS1WpVcHCwTpw4ofnz52v58uUaM2aM3nnnHdvyadKkUdeuXfXWW28987Y2b96szp076/PPP5evr2+cy5cqVUpdu3bVm2+++czbelZz5szR119/rR9++ME2LWvWrOratauKFCnywrefEBYuXKhp06bpzTffVIMGDZQhQ4Y4n9OgQQNlzZrV9jgiIkJXr17VmjVrtH37dg0aNEjvvffeiyw7wdy4cUM1a9aUj4+PGjVq9FK2+fj7J8rNmze1b98+rVy5Ups3b9bChQtfSht+0okTJ9S4cWO9//77qlWrlm16165d9dprr730ehLKi6rfarVqzJgxmjRpkpydnVW6dGmVK1dOzs7O+vvvvzV//nzNnz9fX3/99SvznnhVde3a1e5xZGSkrly5og0bNmjcuHE6dOiQfvrpJ1kslhdaR758+dS1a1e9/fbbL3Q7SDwIxCZWtWpVNWzYMNr0LVu26MMPP1TPnj21dOlS5ciRQ9KjQNytW7fn2tbNmzdltVrjvXzp0qVVunTp59rWs7px40a0admyZXvu1+oIf/31lySpX79+Klu2bLye06BBgxj/xk2bNpW/v7+GDh2qunXrKkWKFAla64sQEhKi+/fvv9Rtxvb+sVqt6tOnjxYvXqzx48fru+++e6l1SdKdO3cUHh4ebfqr1KZj8qLqHzt2rCZOnKgCBQpo9OjRtmNelJMnT+qDDz5Q//79VbBgwWhfhJBwYtvHgYGBatiwobZu3aodO3bE68TKf5EvXz72s8nQZQLRVKxYUR999JEePHigH3/80dHlIB7CwsIkSenSpfvP6ypevLiKFi2q4OBg7d+//z+vz2ycnJxsXXt27drl4GoQl1OnTmny5MlKkyaNJk+eHC0MS5KXl5eGDBmiyMhITZ061QFVIlOmTGratKkk3ld4MQjEiFGLFi3k6uqqdevWKSIiQlLM/XgjIiI0fvx4+fn5qUiRIipVqpTatWtnd8D64osv1Lt3b0nSt99+K29vb126dMnWf3DOnDn6+OOPVbhwYfn6+mr//v3R+hA/bt26dfLz81OhQoVUo0YNTZo0KdrZsNj6Gj7ZL6xly5YaP368JOnDDz+Ut7e3pNj7Np49e1affvqpypYtq4IFC6pq1aoaPny47t27Z7dcVD/dO3fuqH///ra+vQ0bNtTatWvjtQ8kaceOHWrTpo2KFSumwoULq0GDBpo9e7btbHvUPlmyZIkkqX79+vL29taePXvivY2YZMqUSZJ0+/Zt27SbN29q2LBhqlWrlooUKaIiRYqoTp06mjhxoq2NSP/7G//2229q166dChUqpEqVKunixYuSpODgYI0cOVJVq1ZVwYIFVb58efXv3z/amfqoNvDPP/9o1KhReuedd1SwYEHVqVNHv/76q932qlSpIknasGGDvL29tXjxYtv8TZs2qX379vLx8VGBAgXk4+OjLl266Pjx4//pb/Q0UV1Wor6oPO63335Ts2bNVLRoURUrVkytWrXS7t2747XekydPqlevXqpYsaIKFiyoYsWKqVmzZnZtaty4cQoICJAk/fLLL3btIab3xb179zR8+HDb/ihbtqw++eQTnT171m65qP26a9cuTZ06VdWrV1ehQoVUtWpVTZgwQZGRkXbLb9++Xa1atVKZMmVUpEgR+fn5adKkSTH+TSRpyZIlqlevngoVKqTy5cvr22+/VUhIiN0yT9Yf1Ub+/vtvDRo0SD4+PipevLhat24d7y9zCxYsUEREhDp16vTUrkZly5ZVgwYN5OPjE+1vEltbv3btmvr162fbXxUrVlS/fv107do1u3VHHS9iapNPvuaobW7btk3jx49X+fLlVbRoUTVt2lSbNm2K9vxn3Q8xOXnypFq1aqUiRYqoXLly6tevn9379YcffpC3t7cWLFgQ7bmXL19W3rx59emnn8Z7e7GJ7X0V32OKJF2/fl39+vVT+fLlVaRIETVv3lwHDhxQ69atVblyZdtysfUhPnz4sLp06aLSpUurUKFCql27tiZOnBitppYtW6py5cr6999/9cknn6h06dIqUqSI/P39//PxGS8GgRgxSpEihfLnz68HDx48NTgMHDhQ48aNU9q0adWiRQvVrFlThw4dUrt27Wxv+qpVq9oCi6+vr7p27ao0adLY1vHDDz/oyJEjatGihfLnz6/8+fPHur0///xTH330kd544w29//77slgsGjVqlD777LPnep0NGjRQqVKlJEm1a9eO1n/tcYcOHVLDhg21atUqvf322/L391eGDBk0depUNWnSxC48RmnTpo22bdumWrVqyc/PT6dOndJHH32kffv2xVnbzJkz1bZtWx05ckTVqlVTo0aNdO/ePX3zzTf65JNPZBiGrV933rx5JT3q7tC1a1e7vsHP48KFC5L+F4zv3bunJk2a6JdfflHu3LkVEBCgunXrKigoSKNHj46xW8CgQYN08+ZNtWzZUoUKFdIbb7yhe/fu6f3339fkyZOVLVs2BQQEqGjRopo/f77ee++9aEFBknr16qX58+erQoUKatKkiQIDAzVgwAAtW7ZM0qNLm1EB8M0331TXrl1tlzpnzZqlTp066fz586pbt64CAgKUO3dubdiwQf7+/jFuLyFs27ZNkmz7JcqYMWPUo0cPXbt2TQ0aNFCDBg10+vRptWnTxvZ6YnP48GG999572rx5s3x9fdWmTRv5+vrqyJEj6t69uy0MlSpVSg0aNJAkFSlS5Knt4datW3rvvfc0depUZciQQf7+/nr77be1evVqNW7cWIcOHYr2nBEjRmj8+PEqXry4mjdvrtDQUH3//feaNGmSbZl9+/apU6dO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WnPmzLF1wZIeve+ijoMv85iMhEeXCRNbv3697cBoGIbu3bunv/76S/v27ZObm5tGjx791DOenp6eatWqlaZPn666deuqYsWKcnJy0rZt2/TPP/+oS5cutv5WUQfFX3/9VXfu3IlX37WYZM+eXZ9++qnWr1+vdOnSadOmTbp06ZI++OADuzNBTZo00cCBA9WyZUvVrVtXYWFh+u233+Tl5RXtrE1UbRMmTNDx48djHIvYyclJQ4cOVbt27dSpUydVqlRJ2bNn18GDB/Xnn38qV65czz0WckzeeOMNff755xo8eLAaNGigqlWryt3dXVu3btXFixdVp06daCM+vEh+fn6aNm2aGjVqpKpVqyoiIkLbt2/X2bNnlT59et28eVO3b9+29Y2Mzeeff66DBw9q2LBh2rBhgwoXLqzAwECtW7dOLi4uGjJkSJxhIybp0qVT8uTJtWfPHn377beqVq2aKlWqpO+++06TJk3SmTNnlD17dp0/f16bNm2y9fGLaezo/8rJyUkDBw5Uo0aNNG/ePNWrV0/FixeXj4+PWrZsqZkzZ6pOnTqqWLGikidPrvXr1+vq1atq1qxZrH26c+bMqcKFC2vfvn1q3ry5ihUrplu3bmn9+vUKCwtTihQp7M6sR7Xp3377Te7u7mrQoEGMVxR69eqlAwcOaPLkydq7d6+KFi2qixcvauPGjUqZMqVGjBjxXFd3unXrpj179iggIEA1a9ZUpkyZdPr0aW3atEm5cuVSvXr1nnmdT3Pv3j01aNBA1apVU3BwsNauXSs3NzcNHDgwXs//8MMP5ebmpu+//1716tVTsWLFlD9/frm6uurcuXPasWOHQkNDlSlTJvXp0ydeQfKbb76Rv7+/BgwYoHXr1snb21snT57Ujh07lDFjRrva6tatqzFjxmjq1Km6ePGismXLph07duju3buxbstisahJkyaqWbOmDMPQunXrFBoaquHDh9u+DCbEfsiQIYOWLl2qU6dOqWDBgjpw4ID+/PNPlShRwjb+9+MaNGigadOm6erVq+rRo0ec64+vqPHGp0+frn79+mnx4sVKlizZMx1TevTooW3btmnAgAHasGGDcufOrb179+rMmTNyc3N76rEnVapUGjJkiHr27KlmzZqpWrVqypAhg3bv3q2TJ0+qRIkS6tChQ4K9Xrx8nCE2sQ0bNmj8+PEaP368fvjhBy1YsEC3b99WixYttGLFCr3zzjtxrqNXr14aMGCAUqVKpSVLlmj+/PlKmTKlhg4dqo8++si2XMmSJeXv7687d+5o9uzZ8RoEPSbvvPOOBg0apKNHj2ru3LlKkSKFBg0apE8++cRuuRYtWujLL7+Uh4eH5s6dq127dqljx4768ssvo62zdu3aqlWrli5evKg5c+bEOsxTsWLFtHDhQtWuXVsHDx7U7Nmzdfv2bXXu3FkLFixI8L5jAQEBmjx5sgoUKKB169ZpyZIlSps2rQYNGhTvIe0SSs+ePdWtWzc5OTlpzpw5Wr9+vbJmzaqpU6eqU6dOkhTtzHlM0qdPr/nz56tt27YKDAzUzJkztW/fPlWuXFnz58+P901+T0qePLn69esnDw8PzZkzR7t371amTJk0ffp0+fj4aPfu3ZozZ47Onj2rli1b6rffflPatGm1bdu2F3JzS758+dSqVSsZhqH+/fvbzj717dtXw4cP1+uvv67ly5dryZIleu211zRkyBDbZeyYODk56ccff1TDhg116dIl29+tQoUKWrRokcqVK6dz587ZLrFnzZpVPXr0kMVi0ezZs2O8TCzZ74+goCDNmjVLR44cUf369bV48WIVKVLkuV5/4cKFNWvWLJUrV067d+/W9OnT9ffffysgIECzZ8+OdeSa59WvXz9VrVpVq1at0rZt21SpUiXNmzfPrhvV01gsFrVv316rVq1Sx44dFRoaqpUrV2rmzJn666+/VL58eQ0bNkzr169XjRo14rXOnDlzatGiRWrSpIlOnz6tWbNm6dy5c2rZsqWWLl1qN0zca6+9pl9++UVlypTR1q1btWDBAuXKlUu//vprrEPCderUSS1bttSmTZu0du1aFSlSRLNmzbLrE5wQ+8HT01PTp09XeHi4Zs2apatXr6pDhw6aMmVKjH3hvby8lCtXLqVIkULVqlWL198qvrp3766sWbPq5MmTmjJliqRnO6akT59ev/76q/z8/HTkyBHNmTNH7u7u+uWXX5QyZUq77h8xqV69uubMmaNy5cpp27Ztmj9/viTps88+04wZM+gu8YqzGNzqCAB4BY0bN872hb5q1aqOLuelWLx4sXr37q3evXvbjaebWNy7d0/lypVTjRo17Pr7JgYXLlxQ5syZowXXsLAwFStWTGXKlNHkyZMdVB0cjTPEAAAgQUyePFkPHz5U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ZQKm5+7urty58+jw4T914MBederUVRs2POpLGBj4r7p166hGjZrIx6es0qfPYHf25fGzsDGdkY2MtCpLlqyaMWPO/z+O1K1bN2WxPLqEHCWuoegqVHhHnTu3U6lSPipSpJicnGL6LmvR47/+F9XP9XF//31CZ86c1pgxIzVu3ChZrVZdvx6ko0ePyGKx6LGS7J7/aJ7x/68h4qm1JmWvQlvJlCmz3WPDsD7x+NE+fHyfPtre//Zr8uTJbf+PWs7JyTnaup60du1qGYbUoUOAJOnhw4cKDw9X585dY21fT9YREREhFxdzfTTt3LldISEPVKVKddWpU0916tTT8uVLtHLlMlWsWNlu2ahuFFEe7RsnWa1P/+XPyEirxo6doDRpPCRJ169fV7p09v3f586dpeLFSylPHi/lypVbzZq10Ndf99WWLRvl4pJMlStXVY8evSRJDx48UGTk/4Yri2rTT+5PSTHUZtieG9uVLOBl4wwxIKly5aqaOHG8vL3z230Ynzjxl7Jle0NNm/orX7782rp10zONWZkjR07dvXtXhw4dlCStWrVcAwb0kYdHWmXOnNl22fD339c8dT2Pln9dU6ZMjLG7hCTlzp1HN2/etPUtXr9+bbRlVq9ernr1Gmjx4lVauHCFFi9epRo1amvZskUqXPhtHTt2WEFB12S1WrVx4+9224+69L1t25Zo63V2drb7cEzKEntbeVKxYiW1atUySY/6qm7btllFi5aQh0danT9/VoZh6MqVyzp9+vRT11OiREnt2rVD9+8HKzw8XFu2bIw2ZNVvv61Unz79tXDhCi1cuELLlq1RmjRptGHD7ypRopQ2bvxdYWFhunv3rvbs2SVJSpUqte7evatbt24pLCzMNv1xSb19ubm5aeLEH3T16hVJj0LuqVMnlSePd7yeX6JEaW3ZslHh4eG6fz9YO3duj7ZvihcvocWLF0iSzp49o4CApnr4MNRumfv372vKlAm27lL37wfr8uVLypPHS0WLFtfWrZt169ZNGYah7777VvPnz4lXfcWLl9Bvv61SZGSkQkNDtW7dGhUtWiJezwVeFnN9DQdiUa5cBQ0dOlDt23eym16ypI+WLFmoFi3ek2EYevvtYjpz5p94rzd58uQaOHCoxowZqbCwMLm7p7T1lfvqq4H69tuvNXnyjypQoHCc66pcuaqmTZtsG23iSS4u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\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create stacked bar chart for Parental relationship Status by region\n",
    "parental_relationship_region_stacked=parental_relationship_region.plot(kind='bar',\n",
    "                                                                      stacked= True,\n",
    "                                                                      color= ['salmon', 'orangered','peru', 'sandybrown', 'peachpuff'],\n",
    "                                                                      figsize=(12,10))\n",
    "plt.title('Distribution of Parental Relationship Groups by Region', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Region')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 688,
   "id": "db227c22",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:14.105967Z",
     "start_time": "2022-11-08T18:26:14.007796Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "parental_relationship_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_parental_relationship_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 689,
   "id": "cab05d71",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:14.161099Z",
     "start_time": "2022-11-08T18:26:14.108398Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>income_profile</th>\n",
       "      <th>High Class</th>\n",
       "      <th>Low Class</th>\n",
       "      <th>Mid Class</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.111225</td>\n",
       "      <td>0.155194</td>\n",
       "      <td>0.733581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.111927</td>\n",
       "      <td>0.156818</td>\n",
       "      <td>0.731254</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.111161</td>\n",
       "      <td>0.156752</td>\n",
       "      <td>0.732087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.113259</td>\n",
       "      <td>0.157194</td>\n",
       "      <td>0.729548</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "income_profile  High Class  Low Class  Mid Class\n",
       "region                                          \n",
       "Midwest           0.111225   0.155194   0.733581\n",
       "Northeast         0.111927   0.156818   0.731254\n",
       "South             0.111161   0.156752   0.732087\n",
       "West              0.113259   0.157194   0.729548"
      ]
     },
     "execution_count": 689,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create crosstab for Income Profile(Group) and region \n",
    "income_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['income_profile'], normalize='index')\n",
    "income_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 914,
   "id": "58bc9a92",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:33:08.928383Z",
     "start_time": "2022-11-08T22:33:08.750059Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 914,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart for Income Profile by region\n",
    "income_region_stacked=income_region.plot(kind='bar',\n",
    "                                        stacked=True,\n",
    "                                        color=['darkcyan', 'lightseagreen', 'mediumturquoise'],\n",
    "                                        figsize=(12,10))\n",
    "plt.title('Distribution of Income Groups by Region', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Region', fontweight='bold')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 915,
   "id": "1f33aa68",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:33:27.096538Z",
     "start_time": "2022-11-08T22:33:27.031260Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "income_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_income_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 979,
   "id": "1b9e3abd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:54:10.693817Z",
     "start_time": "2022-11-08T23:54:10.651095Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>gender</th>\n",
       "      <th>Female</th>\n",
       "      <th>Male</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.498254</td>\n",
       "      <td>0.501746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.489731</td>\n",
       "      <td>0.510269</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.495784</td>\n",
       "      <td>0.504216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.497746</td>\n",
       "      <td>0.502254</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "gender       Female      Male\n",
       "region                       \n",
       "Midwest    0.498254  0.501746\n",
       "Northeast  0.489731  0.510269\n",
       "South      0.495784  0.504216\n",
       "West       0.497746  0.502254"
      ]
     },
     "execution_count": 979,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for Genders and Regions\n",
    "gender_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['gender'], normalize='index')\n",
    "gender_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 980,
   "id": "d4d66db2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:54:13.739029Z",
     "start_time": "2022-11-08T23:54:13.580731Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 980,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart for Genders by region\n",
    "gender_region=gender_region.plot(kind='bar',\n",
    "                                        stacked=True,\n",
    "                                        color=['darkcyan', 'mediumturquoise'],\n",
    "                                        figsize=(12,10))\n",
    "plt.title('Distribution of Genders by Region', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Region', fontsize=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 694,
   "id": "075192ff",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:14.708835Z",
     "start_time": "2022-11-08T18:26:14.645698Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart for Genders by region\n",
    "gender_region.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_gender_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 695,
   "id": "583341ab",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:14.759102Z",
     "start_time": "2022-11-08T18:26:14.710815Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>relationship_age_status</th>\n",
       "      <th>Married Mid Adult</th>\n",
       "      <th>Married Senior</th>\n",
       "      <th>Married Young Adult</th>\n",
       "      <th>Single Mid Adult</th>\n",
       "      <th>Single Senior</th>\n",
       "      <th>Single Young Adult</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.399729</td>\n",
       "      <td>0.200724</td>\n",
       "      <td>0.102330</td>\n",
       "      <td>0.135762</td>\n",
       "      <td>0.064259</td>\n",
       "      <td>0.097196</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.401071</td>\n",
       "      <td>0.197334</td>\n",
       "      <td>0.104860</td>\n",
       "      <td>0.132571</td>\n",
       "      <td>0.067877</td>\n",
       "      <td>0.096288</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.397081</td>\n",
       "      <td>0.200487</td>\n",
       "      <td>0.104589</td>\n",
       "      <td>0.131475</td>\n",
       "      <td>0.065839</td>\n",
       "      <td>0.100530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.395169</td>\n",
       "      <td>0.201032</td>\n",
       "      <td>0.107109</td>\n",
       "      <td>0.133483</td>\n",
       "      <td>0.065789</td>\n",
       "      <td>0.097418</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "relationship_age_status  Married Mid Adult  Married Senior  \\\n",
       "region                                                       \n",
       "Midwest                           0.399729        0.200724   \n",
       "Northeast                         0.401071        0.197334   \n",
       "South                             0.397081        0.200487   \n",
       "West                              0.395169        0.201032   \n",
       "\n",
       "relationship_age_status  Married Young Adult  Single Mid Adult  Single Senior  \\\n",
       "region                                                                          \n",
       "Midwest                             0.102330          0.135762       0.064259   \n",
       "Northeast                           0.104860          0.132571       0.067877   \n",
       "South                               0.104589          0.131475       0.065839   \n",
       "West                                0.107109          0.133483       0.065789   \n",
       "\n",
       "relationship_age_status  Single Young Adult  \n",
       "region                                       \n",
       "Midwest                            0.097196  \n",
       "Northeast                          0.096288  \n",
       "South                              0.100530  \n",
       "West                               0.097418  "
      ]
     },
     "execution_count": 695,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for Relationship_Age and Region\n",
    "relationship_age_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['relationship_age_status'], normalize='index')\n",
    "relationship_age_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 984,
   "id": "0f96dfb5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:54:43.889714Z",
     "start_time": "2022-11-08T23:54:43.671889Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Region')"
      ]
     },
     "execution_count": 984,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x864 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create stacked bar chart Relationship_Age by Region\n",
    "relationship_age_region_stacked=relationship_age_region.plot(kind='bar',\n",
    "                                                           stacked=True,\n",
    "                                                           color=['darkseagreen', 'olivedrab', 'teal', 'powderblue', 'bisque', 'orange'],\n",
    "                                                           figsize=(15,12))\n",
    "plt.title('Distribution of Relationship Age Groups by Region', fontsize = 20)\n",
    "plt.legend(loc='upper center',ncol=3, fontsize = 15)\n",
    "plt.xlabel('Region')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 985,
   "id": "86a6a65f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:55:00.627700Z",
     "start_time": "2022-11-08T23:55:00.538868Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "relationship_age_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_relationship_age_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 798,
   "id": "632e03e5",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:50:43.697745Z",
     "start_time": "2022-11-08T19:50:43.615069Z"
    }
   },
   "outputs": [],
   "source": [
    "# create proportion of age groups and frequency flag\n",
    "cross_age_frequency = pd.crosstab(index=df_unique_customers['age_profile'],\n",
    "                             columns=df_unique_customers['frequency_flag'],\n",
    "                             normalize=\"index\")\n",
    "# creating cross tab to display labels\n",
    "age_frequency_label=pd.crosstab(index=df_unique_customers['age_profile'],columns=df_unique_customers['frequency_flag'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 801,
   "id": "635de1f2",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:52:10.291898Z",
     "start_time": "2022-11-08T19:52:10.096455Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create stacked 100% bar chart to show proportions\n",
    "\n",
    "age_frequency=cross_age_frequency.plot(kind='bar', \n",
    "                    stacked=True, \n",
    "                    colormap='tab10', \n",
    "                    figsize=(15, 10))\n",
    "\n",
    "plt.legend(loc=\"upper center\", ncol=3)\n",
    "plt.title(\"Age groups and frequency\", fontsize = 20)\n",
    "plt.xlabel(\"Age groups\", fontsize = 15)\n",
    "plt.ylabel(\"Purchases\", fontsize = 15)\n",
    "\n",
    "# add the percentage information to every bar, using FOR cycle\n",
    "\n",
    "\n",
    "for n, y in enumerate([*age_frequency_label.index.values]):\n",
    "    for (proportion, count, x_loc) in zip(cross_age_frequency.loc[y],\n",
    "                                         age_frequency_label.loc[y],\n",
    "                                          cross_age_frequency.loc[y].cumsum()):\n",
    "                \n",
    "        plt.text(y=(x_loc - proportion) + (proportion / 2),\n",
    "                 x=n - 0.11,\n",
    "                 s=f'{count}\\n({np.round(proportion * 100, 1)}%)', \n",
    "                 color=\"black\",\n",
    "                 fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 810,
   "id": "3044694e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:04:22.698471Z",
     "start_time": "2022-11-08T20:04:22.600679Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "price_range_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'price_range_region_stacked.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 701,
   "id": "7e14af3c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:15.623151Z",
     "start_time": "2022-11-08T18:26:15.558673Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.103997</td>\n",
       "      <td>0.421878</td>\n",
       "      <td>0.474124</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.105910</td>\n",
       "      <td>0.422029</td>\n",
       "      <td>0.472062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.104017</td>\n",
       "      <td>0.423431</td>\n",
       "      <td>0.472552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.105157</td>\n",
       "      <td>0.423109</td>\n",
       "      <td>0.471734</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag  Loyal customer  New customer  Regular customer\n",
       "region                                                      \n",
       "Midwest             0.103997      0.421878          0.474124\n",
       "Northeast           0.105910      0.422029          0.472062\n",
       "South               0.104017      0.423431          0.472552\n",
       "West                0.105157      0.423109          0.471734"
      ]
     },
     "execution_count": 701,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for Customer Loyalty and Region\n",
    "loyalty_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['loyalty_flag'], normalize='index')\n",
    "loyalty_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 857,
   "id": "0d30cffd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T21:08:25.489296Z",
     "start_time": "2022-11-08T21:08:25.334120Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f6999bfeca0>"
      ]
     },
     "execution_count": 857,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Grouped bar chart of loyalty by regions\n",
    "bar_loyalty_region=loyalty_region.plot.bar(color=['darkgoldenrod', 'khaki', 'darkkhaki'], fontsize=13)\n",
    "plt.title('Distribution of loayl customers in US regions', fontsize=18)\n",
    "plt.legend(loc=\"upper center\", ncol=3, fontsize=12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 858,
   "id": "4db8c5e9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T21:08:31.120430Z",
     "start_time": "2022-11-08T21:08:31.058750Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "bar_loyalty_region.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_loyalty_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 704,
   "id": "61645443",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:16.074426Z",
     "start_time": "2022-11-08T18:26:16.023626Z"
    },
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>spender_flag</th>\n",
       "      <th>High spender</th>\n",
       "      <th>Low spender</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.023009</td>\n",
       "      <td>0.976991</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.021448</td>\n",
       "      <td>0.978552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.023232</td>\n",
       "      <td>0.976768</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.022806</td>\n",
       "      <td>0.977194</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "spender_flag  High spender  Low spender\n",
       "region                                 \n",
       "Midwest           0.023009     0.976991\n",
       "Northeast         0.021448     0.978552\n",
       "South             0.023232     0.976768\n",
       "West              0.022806     0.977194"
      ]
     },
     "execution_count": 704,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for Customer Spending Groups and Region\n",
    "spending_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['spender_flag'], normalize='index')\n",
    "spending_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 897,
   "id": "f1a22f92",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:26:52.736202Z",
     "start_time": "2022-11-08T22:26:52.573733Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f699cba8940>"
      ]
     },
     "execution_count": 897,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create stacked bar chart for customer spending by region\n",
    "spending_region_stacked=spending_region.plot(kind='bar',\n",
    "                                              stacked=True,\n",
    "                                              color=['steelblue', 'skyblue'],\n",
    "                                              figsize=(12,10))\n",
    "plt.title('Distribution of Customer Spending by Regions', fontsize = 20)\n",
    "plt.legend(loc='upper center', ncol=3)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 898,
   "id": "6cc2d6e4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:27:02.154400Z",
     "start_time": "2022-11-08T22:27:02.091227Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "spending_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_spending_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 707,
   "id": "6f1be82d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:16.552235Z",
     "start_time": "2022-11-08T18:26:16.483197Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>frequency_flag</th>\n",
       "      <th>Frequent customer</th>\n",
       "      <th>Non-frequent customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>region</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Midwest</th>\n",
       "      <td>0.463675</td>\n",
       "      <td>0.227825</td>\n",
       "      <td>0.308500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Northeast</th>\n",
       "      <td>0.466919</td>\n",
       "      <td>0.221301</td>\n",
       "      <td>0.311781</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>South</th>\n",
       "      <td>0.467108</td>\n",
       "      <td>0.226542</td>\n",
       "      <td>0.306350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>West</th>\n",
       "      <td>0.469468</td>\n",
       "      <td>0.224681</td>\n",
       "      <td>0.305851</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "frequency_flag  Frequent customer  Non-frequent customer  Regular customer\n",
       "region                                                                    \n",
       "Midwest                  0.463675               0.227825          0.308500\n",
       "Northeast                0.466919               0.221301          0.311781\n",
       "South                    0.467108               0.226542          0.306350\n",
       "West                     0.469468               0.224681          0.305851"
      ]
     },
     "execution_count": 707,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#create crosstab for Customer Order Frequency and Region\n",
    "order_frequency_region=pd.crosstab(index=df_unique_customers['region'], columns=df_unique_customers['frequency_flag'], normalize='index')\n",
    "order_frequency_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 894,
   "id": "4b2a07b7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:26:12.169157Z",
     "start_time": "2022-11-08T22:26:11.988684Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f699b6cd940>"
      ]
     },
     "execution_count": 894,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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Fvt7pGTJkurXr5+OHDkiPz8//fTTT/b1ypcvryJFisR4fFzv9evXr2vQoEGqUKGC8ubNqzJlyqhXr14xvtGIbn9HjhzR4MGD9dZbbylv3ryqVq2apk6dGmN/UVFRGjt2rGrUqKE333xT5cqVU9euXXXy5En78/Hz81OXLl1iPXYVKlTQW2+99UjfuG3evFnvvPOO8uXLp7feekvfffedbty4Yb//iy++kJ+fn9atWxfrY/38/DRkyJB49xOfTJkySfr3D/doj/qek6QTJ07ok08+UcmSJVWwYEG1bt1aR44cUcWKFdW0aVP7enF9dsR3Lo1Wvnx5NW3aVEeOHFHbtm1VuHBh+/4OHDjwn48FnIMhE3hiqVOnVu7cubV9+3bt379f+fLli3W9Pn36aNq0aSpWrJjKli2ra9euaeHChWrVqpXGjh2r4sWLq0KFCrp69aqWLVum0qVL680331S6dOl0+vRpSdLPP/8sT09PNWnSRIcPH1bu3LljPUFL0o4dO7RixQoFBASoRIkSWr16tQYPHqwDBw480Ym7du3aku5dXBYYGPjQr/N27typ9957T7du3VJAQIBefPFF7dixQ6NHj9aKFSs0derUGL2tLVq00OXLl1W1alXdvHlT8+fP18cff6xJkybF+uF8v4kTJ+qbb75R2rRpVbFiRXl6eiokJERff/21tmzZosGDB9vHdS9dulQHDhxQgwYN5O3t/dBxnCEhIZIU71ju/3JRztGjR9WiRQu5urqqSpUqSpcunbZv366RI0dq9+7dGj9+vL328ePH6/bt2/rggw/sY9pPnDihd999V+fPn1fJkiVVtWpV/f3335o+fbqWL1+uqVOn6sUXX3TYZ6dOnXTlyhVVq1ZNZ8+e1ZIlS/T++++rfPnyWrlypSpXrqzbt29r3rx5atu2rRYvXqwsWbJIks6cOaN3331XoaGhCggI0Kuvvqr9+/dr1KhRWrdunSZPnixPT0/7vi5duqROnTrp7bfflpeXl1599dU4j0V0Wy5btmy8x61SpUpasWKFli5dqsqVK9uXh4SE6K+//lLt2rV1/vx5FShQQDabTa1bt9amTZuUP39+VaxYUbt371bLli2VOnXqGNueOXOmvvzyS2XKlEmBgYHy9PTUsmXL9PHHH6tz585q27atw/ozZsyQJL377rv6559/9Oabb8Zb/+OI6xiuWrVKHTp0UIoUKVSpUiVlypRJISEh6t27t/bt26c+ffrYt7Fy5Ur7ulWqVFHq1Kk1Z84c7dix4z/Vdu3aNTVq1EgHDx5UiRIlVKlSJZ06dUozZsxQSEiIpk2bJh8fH4fHdO3aVWfOnFGlSpXk7u6uefPmqXfv3vL09LS/lyzLUps2bRQSEqLXXntN9erV06VLl7Rw4UL7NzeFCxfWiy++qGXLlikiIsLhtdy2bZtOnjypDz74IN6x/WfOnFHLli1VsGBBNWnSRBs3btSoUaO0bds2TZw4Ue7u7qpVq5Z+//13zZ8/P8ZQq3nz5kmSatSo8Z+Opc1m09q1ayVJuXLlcqjvUd9zx48fV8OGDXX58mVVqFBBL7zwglasWKFGjRrJZrMpa9asD63hUc6lLi4u9vXPnj2rd999Vzly5FD9+vV19OhRrVixQjt37tTy5cvl5eX1n44JnMACYvHjjz9avr6+1u+///7Q9Tp27Gj5+vpay5YtsyzLsk6ePGn5+vpa7dq1syzLsq5du2blypXLaty4scPjdu3aZfn6+lofffSRfdnvv/9u+fr6WmPHjrUv27Bhg+Xr62sVKFDACgsLi7XGv/76y2Hfvr6+1vjx4+3rRUREWM2aNbN8fX2tNWvW2Jf7+vpaNWrUiPGcYqvjwX3dX9s333xjWZZlRUZGWpUqVbJy585trVq1ymGb3333neXr62v973//sy/r1q2b5evra9WrV8+6ceOGffm8efMsX19fq2vXrjFqu9+JEyes3LlzW2+99ZZ14sQJ+/IbN27Yn++cOXNi7G/fvn0P3W5ERITl6+trFSpU6KHrxSa2YxetSZMmlq+vr3XlyhXLsixrwIABlq+vr7V+/XqH9T744APL19fXOnjwoH1ZQECAVbhwYYf1op/jjBkzHJZPnjzZ8vX1tZo1a2ZfFv36BQQE2PdvWZb1ySef2J/ruXPn7Mt/+ukny9fX15o8ebJ9WevWrS0/Pz9r+fLlDvsbP3685evraw0cODDGc+3fv3+cx+p+derUsXx9fa09e/bEu+6OHTssX19fq0GDBvZl0e0++n0YbdasWfZ2FxUVZV8+cOBA+2OinT171sqbN69VtWpV6+LFi/blERERVoMGDaxcuXJZf//9t2VZ/77X/Pz8rP379z/Sc4xuf926dbN+/PHHWP/dL65jePPmTcvf39/y9/e3Tp48aV8eFRVlffTRR5avr6+1cuVKy7Is6+7du1a5cuWsN99806HO48ePW8WKFbN8fX0d9htbO7OsmO91y7Ks3r17W76+vtakSZMc1l26dKnl6+trdezY0b7s/vZ34cIF+/KtW7davr6+VqNGjezLZs6caX/87du37cvnz59v+fr6Wn369LEsy7KGDh1q+fr6WgsWLHDYf3Rdhw4divE87hf9+vfr18++LDIy0vr0008tX19fa/r06ZZlWZbNZrMfl/vruX37tlW0aFGrbt26D91P9L4CAgJiLL9165Z18OBB+z7vPw6W9XjvuTZt2li+vr7WokWLHGp89913LV9fX6tJkyb25Q+ezx/3XBoQEGD5+vpaX331lWWz2ezLe/ToYfn6+lozZ86M95gg6WHIBP6T6K/TY/v6Srr3l79lWTpz5ozOnj1rX54vXz4tXbpU33///SPtp3DhwvL29n6kdV966SU1btzYfjtVqlTq3LmzJGn+/PmPtI0nsX37dh07dkzVqlWL0dPXsWNHZcmSRfPnz4/xlWDjxo0dehbLlSsnSTp27NhD9zdv3jxFRkbqww8/dOgJ9fT0VI8ePSRJv//++2M/j+ghDWnSpHnsxz6O6K8ht23b5rC8f//+Wr9+vV5//fU4H3vu3Dlt2LBBRYoU0TvvvONwX6NGjZQvXz5t2LBBp06dcrivTp06Spcunf129FjdatWq2XuCJSl//vySZP+GIiwsTKtXr1a5cuUUEBDgsM0mTZro+eef1+zZs2PUeX8P7sNEv38epVcpffr0khRj3HaqVKnsbSfaggUL5OLiok8//dSht7BTp05Kmzatw7rz5s3TnTt31LFjR4dx5qlSpVLHjh1ls9nsw26i5ciRw6FH71HMmTNHw4YNi/VfbB48hsuXL9fFixf1/vvv64UXXrAvd3V11aeffirp33a/bds2nT17VjVr1nSo86WXXlKLFi0eq+77RUZGau7cuXr99dcdzjXSvZl5ChUqpL/++ivGebFu3br2oQHSvfaXLl06h/f6ggULJN0bqnD/cKVq1aqpbdu29jZbq1YtSY7ntLt372rRokXKkyePXnvttXifh5eXl8OFbm5ubvrss8/k4uJi366Li4tq1qypa9euadWqVfZ1V61apStXrjzyt0SnT5+OMe1a/vz5Vb16df3555+qUKGCw/CVx3nPXbx4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\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create crosstab for Customer Order Frequency by Region\n",
    "order_frequency_region_stacked=order_frequency_region.plot(kind='bar',\n",
    "                                                          stacked=True,\n",
    "                                                          color= ['teal', 'goldenrod', 'darkkhaki'], \n",
    "                                                          figsize=(12,10))\n",
    "plt.title('Distribution of Customer Order Frequency by Region', fontsize = 20)\n",
    "plt.legend(loc='upper center', ncol=3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 899,
   "id": "90ace633",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:28:35.037772Z",
     "start_time": "2022-11-08T22:28:34.970005Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "order_frequency_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_order_frequency_region.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 885,
   "id": "a51ec7bd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:11:36.856379Z",
     "start_time": "2022-11-08T22:11:36.804662Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>region</th>\n",
       "      <th>Midwest</th>\n",
       "      <th>Northeast</th>\n",
       "      <th>South</th>\n",
       "      <th>West</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>department</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>alcohol</th>\n",
       "      <td>0.259259</td>\n",
       "      <td>0.148148</td>\n",
       "      <td>0.444444</td>\n",
       "      <td>0.148148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>babies</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bakery</th>\n",
       "      <td>0.363636</td>\n",
       "      <td>0.272727</td>\n",
       "      <td>0.090909</td>\n",
       "      <td>0.272727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>beverages</th>\n",
       "      <td>0.236407</td>\n",
       "      <td>0.175675</td>\n",
       "      <td>0.333198</td>\n",
       "      <td>0.254720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>breakfast</th>\n",
       "      <td>0.181818</td>\n",
       "      <td>0.272727</td>\n",
       "      <td>0.363636</td>\n",
       "      <td>0.181818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>canned goods</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dairy eggs</th>\n",
       "      <td>0.233279</td>\n",
       "      <td>0.175901</td>\n",
       "      <td>0.333256</td>\n",
       "      <td>0.257563</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>deli</th>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.333333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>dry goods pasta</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>frozen</th>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.277778</td>\n",
       "      <td>0.361111</td>\n",
       "      <td>0.194444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>household</th>\n",
       "      <td>0.247126</td>\n",
       "      <td>0.158046</td>\n",
       "      <td>0.327586</td>\n",
       "      <td>0.267241</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>international</th>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>meat seafood</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>pantry</th>\n",
       "      <td>0.277778</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>0.305556</td>\n",
       "      <td>0.194444</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>personal care</th>\n",
       "      <td>0.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>produce</th>\n",
       "      <td>0.211538</td>\n",
       "      <td>0.186813</td>\n",
       "      <td>0.353022</td>\n",
       "      <td>0.248626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snacks</th>\n",
       "      <td>0.233310</td>\n",
       "      <td>0.174982</td>\n",
       "      <td>0.326774</td>\n",
       "      <td>0.264933</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "region            Midwest  Northeast     South      West\n",
       "department                                              \n",
       "alcohol          0.259259   0.148148  0.444444  0.148148\n",
       "babies           0.000000   1.000000  0.000000  0.000000\n",
       "bakery           0.363636   0.272727  0.090909  0.272727\n",
       "beverages        0.236407   0.175675  0.333198  0.254720\n",
       "breakfast        0.181818   0.272727  0.363636  0.181818\n",
       "canned goods     0.000000   0.000000  1.000000  0.000000\n",
       "dairy eggs       0.233279   0.175901  0.333256  0.257563\n",
       "deli             0.333333   0.166667  0.166667  0.333333\n",
       "dry goods pasta  0.000000   0.000000  1.000000  0.000000\n",
       "frozen           0.166667   0.277778  0.361111  0.194444\n",
       "household        0.247126   0.158046  0.327586  0.267241\n",
       "international    0.500000   0.000000  0.500000  0.000000\n",
       "meat seafood     0.000000   0.000000  0.000000  1.000000\n",
       "pantry           0.277778   0.222222  0.305556  0.194444\n",
       "personal care    0.500000   0.000000  0.250000  0.250000\n",
       "produce          0.211538   0.186813  0.353022  0.248626\n",
       "snacks           0.233310   0.174982  0.326774  0.264933"
      ]
     },
     "execution_count": 885,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for Departments and Regions\n",
    "dept_region=pd.crosstab(index=df_unique_customers['department'], columns=df_unique_customers['region'], normalize='index')\n",
    "dept_region"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 892,
   "id": "21f2a801",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:17:00.600616Z",
     "start_time": "2022-11-08T22:17:00.158735Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f699cb7a880>"
      ]
     },
     "execution_count": 892,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create stacked bar chart for Departments by Regions\n",
    "dept_region_stacked=dept_region.plot(kind='bar',\n",
    "                                    stacked=True,\n",
    "                                    color=['darkseagreen', 'olivedrab', 'teal', 'powderblue', 'bisque', 'orange'],\n",
    "                                    figsize=(12,10))\n",
    "plt.title('Distribution of Departments by Region', fontsize = 20)\n",
    "plt.legend(loc='upper center', ncol=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 893,
   "id": "39672e19",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:17:03.833573Z",
     "start_time": "2022-11-08T22:17:03.709390Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "dept_region_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_department_region.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0cf322d0",
   "metadata": {},
   "source": [
    "#### 9b. Order Frequency Distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 713,
   "id": "65fb2069",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:23.048144Z",
     "start_time": "2022-11-08T18:26:23.006062Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>frequency_flag</th>\n",
       "      <th>Frequent customer</th>\n",
       "      <th>Non-frequent customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>0.466014</td>\n",
       "      <td>0.226813</td>\n",
       "      <td>0.307172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>0.468948</td>\n",
       "      <td>0.222613</td>\n",
       "      <td>0.308439</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>0.466370</td>\n",
       "      <td>0.225595</td>\n",
       "      <td>0.308035</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "frequency_flag  Frequent customer  Non-frequent customer  Regular customer\n",
       "age_profile                                                               \n",
       "Mid Adult                0.466014               0.226813          0.307172\n",
       "Senior                   0.468948               0.222613          0.308439\n",
       "Young Adult              0.466370               0.225595          0.308035"
      ]
     },
     "execution_count": 713,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for age and order frequency\n",
    "age_order_freq=pd.crosstab(index=df_unique_customers['age_profile'], columns=df_unique_customers['frequency_flag'], normalize='index')\n",
    "age_order_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 916,
   "id": "4b1d5759",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:54:02.032584Z",
     "start_time": "2022-11-08T22:53:58.971360Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Age Group')"
      ]
     },
     "execution_count": 916,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create stacked bar chart for order frequency by age group\n",
    "age_order_freq_stacked=age_order_freq.plot(kind='bar',\n",
    "                                          stacked=True,\n",
    "                                          color=['bisque', 'tan', 'darkorange'],\n",
    "                                          figsize=(12,10))\n",
    "plt.title('Order Frequency by Age Group', fontsize = 20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Age Group', fontweight='bold')\n",
    "\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 917,
   "id": "e18c6d50",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:54:09.295101Z",
     "start_time": "2022-11-08T22:54:09.228382Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "age_order_freq_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_age_order_freq.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 716,
   "id": "caa19ec4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:25.633077Z",
     "start_time": "2022-11-08T18:26:25.572790Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>frequency_flag</th>\n",
       "      <th>Frequent customer</th>\n",
       "      <th>Non-frequent customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>marital_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>divorced/widowed</th>\n",
       "      <td>0.471188</td>\n",
       "      <td>0.220808</td>\n",
       "      <td>0.308004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>living with parents and siblings</th>\n",
       "      <td>0.475289</td>\n",
       "      <td>0.227261</td>\n",
       "      <td>0.297450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>married</th>\n",
       "      <td>0.467252</td>\n",
       "      <td>0.225642</td>\n",
       "      <td>0.307106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>single</th>\n",
       "      <td>0.460626</td>\n",
       "      <td>0.226502</td>\n",
       "      <td>0.312872</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "frequency_flag                    Frequent customer  Non-frequent customer  \\\n",
       "marital_status                                                               \n",
       "divorced/widowed                           0.471188               0.220808   \n",
       "living with parents and siblings           0.475289               0.227261   \n",
       "married                                    0.467252               0.225642   \n",
       "single                                     0.460626               0.226502   \n",
       "\n",
       "frequency_flag                    Regular customer  \n",
       "marital_status                                      \n",
       "divorced/widowed                          0.308004  \n",
       "living with parents and siblings          0.297450  \n",
       "married                                   0.307106  \n",
       "single                                    0.312872  "
      ]
     },
     "execution_count": 716,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create crosstab for family status and order frequency\n",
    "family_order_freq=pd.crosstab(index=df_unique_customers['marital_status'], columns=df_unique_customers['frequency_flag'], normalize='index')\n",
    "family_order_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 919,
   "id": "6dc8676c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:56:26.005469Z",
     "start_time": "2022-11-08T22:56:25.820919Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Family Status')"
      ]
     },
     "execution_count": 919,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart for order frequency by family status\n",
    "family_order_freq_stacked=family_order_freq.plot(kind='bar',\n",
    "                                                stacked=True,\n",
    "                                                color=['bisque', 'tan', 'darkorange'],\n",
    "                                                figsize=(12,10))\n",
    "plt.title('Order Frequency by Family Status', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Family Status', fontsize=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 920,
   "id": "343785fd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T22:56:38.569852Z",
     "start_time": "2022-11-08T22:56:38.497887Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "family_order_freq_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_family_order_freq.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 719,
   "id": "72b24778",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:27.686598Z",
     "start_time": "2022-11-08T18:26:27.639260Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>frequency_flag</th>\n",
       "      <th>Frequent customer</th>\n",
       "      <th>Non-frequent customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>income_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High Class</th>\n",
       "      <td>0.485364</td>\n",
       "      <td>0.209076</td>\n",
       "      <td>0.305560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low Class</th>\n",
       "      <td>0.421959</td>\n",
       "      <td>0.266037</td>\n",
       "      <td>0.312004</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid Class</th>\n",
       "      <td>0.473545</td>\n",
       "      <td>0.219416</td>\n",
       "      <td>0.307038</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "frequency_flag  Frequent customer  Non-frequent customer  Regular customer\n",
       "income_profile                                                            \n",
       "High Class               0.485364               0.209076          0.305560\n",
       "Low Class                0.421959               0.266037          0.312004\n",
       "Mid Class                0.473545               0.219416          0.307038"
      ]
     },
     "execution_count": 719,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for income and order frequency\n",
    "income_order_freq=pd.crosstab(index=df_unique_customers['income_profile'], columns=df_unique_customers['frequency_flag'], normalize='index')\n",
    "income_order_freq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 987,
   "id": "19c85020",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:17:44.475612Z",
     "start_time": "2022-11-09T00:17:44.329877Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Income Group')"
      ]
     },
     "execution_count": 987,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create stacked bar chart of order frequency by income\n",
    "income_order_freq_stacked=income_order_freq.plot(kind='bar',\n",
    "                                                stacked=True,\n",
    "                                                color=['bisque', 'tan', 'darkorange'],\n",
    "                                                figsize=(12,10))\n",
    "plt.title('Order Frequency by Income Group', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Income Group')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 988,
   "id": "e2a63cae",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:17:50.399001Z",
     "start_time": "2022-11-09T00:17:50.329183Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "income_order_freq_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_income_order_freq.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d255f113",
   "metadata": {},
   "source": [
    "#### 9c. Price Range Distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 722,
   "id": "69facde9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:26:29.793130Z",
     "start_time": "2022-11-08T18:26:29.742936Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range_loc</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High-range product</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.428571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low-range product</th>\n",
       "      <td>0.094085</td>\n",
       "      <td>0.435950</td>\n",
       "      <td>0.469965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid-range product</th>\n",
       "      <td>0.109671</td>\n",
       "      <td>0.416427</td>\n",
       "      <td>0.473902</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag        Loyal customer  New customer  Regular customer\n",
       "price_range_loc                                                   \n",
       "High-range product        0.000000      0.571429          0.428571\n",
       "Low-range product         0.094085      0.435950          0.469965\n",
       "Mid-range product         0.109671      0.416427          0.473902"
      ]
     },
     "execution_count": 722,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for customer loyalty and price range\n",
    "loyalty_price_range=pd.crosstab(index=df_unique_customers['price_range_loc'], columns=df_unique_customers['loyalty_flag'], normalize='index')\n",
    "loyalty_price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 805,
   "id": "d25613de",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T19:57:22.559812Z",
     "start_time": "2022-11-08T19:57:22.483181Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>loyalty_flag</th>\n",
       "      <th>Loyal customer</th>\n",
       "      <th>New customer</th>\n",
       "      <th>Regular customer</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price_range_loc</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>High-range product</th>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Low-range product</th>\n",
       "      <td>4929</td>\n",
       "      <td>22839</td>\n",
       "      <td>24621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Mid-range product</th>\n",
       "      <td>12088</td>\n",
       "      <td>45899</td>\n",
       "      <td>52234</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "loyalty_flag        Loyal customer  New customer  Regular customer\n",
       "price_range_loc                                                   \n",
       "High-range product               0            12                 9\n",
       "Low-range product             4929         22839             24621\n",
       "Mid-range product            12088         45899             52234"
      ]
     },
     "execution_count": 805,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create proportion loyalty and price range\n",
    "cross_loyalty_pricerange = pd.crosstab(index=df_unique_customers['price_range_loc'],\n",
    "                             columns=df_unique_customers['loyalty_flag'],\n",
    "                             normalize=\"index\")\n",
    "#creating cross tab to display labels\n",
    "loyalty_pricerange_labels=pd.crosstab(index=df_unique_customers['price_range_loc'],columns=df_unique_customers['loyalty_flag'])\n",
    "loyalty_pricerange_labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 818,
   "id": "d5e82ce4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:11:06.749959Z",
     "start_time": "2022-11-08T20:11:06.573640Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x864 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart of customer loyalty by price range\n",
    "loyalty_price_range_stacked=loyalty_price_range.plot(kind='bar',\n",
    "                                                    stacked=True,\n",
    "                                                    color=['powderblue', 'lightskyblue', 'teal'],\n",
    "                                                    figsize=(15,12))\n",
    "plt.title('Customer Loyalty by Product Price Range', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Product Price Range', fontsize=15)\n",
    "\n",
    "# add the percentage information to every bar, using FOR cycle\n",
    "\n",
    "\n",
    "for n, y in enumerate([*loyalty_pricerange_labels.index.values]):\n",
    "    for (proportion, count, x_loc) in zip(cross_loyalty_pricerange.loc[y],\n",
    "                                         loyalty_pricerange_labels.loc[y],\n",
    "                                          cross_loyalty_pricerange.loc[y].cumsum()):\n",
    "                \n",
    "        plt.text(y=(x_loc - proportion) + (proportion / 2),\n",
    "                 x=n - 0.11,\n",
    "                 s=f'{count}\\n({np.round(proportion * 100, 1)}%)', \n",
    "                 color=\"black\",\n",
    "                 fontsize=12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 819,
   "id": "e3a224cd",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T20:11:13.127974Z",
     "start_time": "2022-11-08T20:11:13.008368Z"
    }
   },
   "outputs": [],
   "source": [
    "# export stacked bar chart\n",
    "loyalty_price_range_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_loyalty_price_range.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 604,
   "id": "9ba98091",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:39.223408Z",
     "start_time": "2022-11-08T18:24:39.181215Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age_profile</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Mid Adult</th>\n",
       "      <td>0.000116</td>\n",
       "      <td>0.319919</td>\n",
       "      <td>0.679965</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Senior</th>\n",
       "      <td>0.000185</td>\n",
       "      <td>0.324902</td>\n",
       "      <td>0.674913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>0.000091</td>\n",
       "      <td>0.324305</td>\n",
       "      <td>0.675604</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc  High-range product  Low-range product  Mid-range product\n",
       "age_profile                                                              \n",
       "Mid Adult                  0.000116           0.319919           0.679965\n",
       "Senior                     0.000185           0.324902           0.674913\n",
       "Young Adult                0.000091           0.324305           0.675604"
      ]
     },
     "execution_count": 604,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for age and price range\n",
    "age_price_range=pd.crosstab(index=df_unique_customers['age_profile'], columns=df_unique_customers['price_range_loc'], normalize='index')\n",
    "age_price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 966,
   "id": "630d9ce3",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:45:19.096740Z",
     "start_time": "2022-11-08T23:45:18.934501Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Product Price Range')"
      ]
     },
     "execution_count": 966,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart of age by price range\n",
    "age_price_range_stacked=age_price_range.plot(kind='bar',\n",
    "                                                    stacked=True,\n",
    "                                                    color=['teal', 'lightseagreen', 'wheat'],\n",
    "                                                    figsize=(12,10))\n",
    "plt.title('Age by Product Price Range', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Product Price Range')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 967,
   "id": "b7318787",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:45:24.327935Z",
     "start_time": "2022-11-08T23:45:24.259481Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar graph\n",
    "age_price_range_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_age_price_range.png'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 607,
   "id": "366d575e",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:40.245311Z",
     "start_time": "2022-11-08T18:24:40.200868Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>price_range_loc</th>\n",
       "      <th>High-range product</th>\n",
       "      <th>Low-range product</th>\n",
       "      <th>Mid-range product</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>marital_status</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>divorced/widowed</th>\n",
       "      <td>0.000145</td>\n",
       "      <td>0.327381</td>\n",
       "      <td>0.672475</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>living with parents and siblings</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.322424</td>\n",
       "      <td>0.677576</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>married</th>\n",
       "      <td>0.000122</td>\n",
       "      <td>0.321892</td>\n",
       "      <td>0.677985</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>single</th>\n",
       "      <td>0.000186</td>\n",
       "      <td>0.320382</td>\n",
       "      <td>0.679432</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "price_range_loc                   High-range product  Low-range product  \\\n",
       "marital_status                                                            \n",
       "divorced/widowed                            0.000145           0.327381   \n",
       "living with parents and siblings            0.000000           0.322424   \n",
       "married                                     0.000122           0.321892   \n",
       "single                                      0.000186           0.320382   \n",
       "\n",
       "price_range_loc                   Mid-range product  \n",
       "marital_status                                       \n",
       "divorced/widowed                           0.672475  \n",
       "living with parents and siblings           0.677576  \n",
       "married                                    0.677985  \n",
       "single                                     0.679432  "
      ]
     },
     "execution_count": 607,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a crosstab for family status and price range\n",
    "family_stat_price_range=pd.crosstab(index=df_unique_customers['marital_status'], columns=df_unique_customers['price_range_loc'], normalize='index')\n",
    "family_stat_price_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 972,
   "id": "f720e077",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:47:27.433742Z",
     "start_time": "2022-11-08T23:47:27.269629Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Product Price Range')"
      ]
     },
     "execution_count": 972,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a stacked bar chart of age by price range\n",
    "family_stat_price_range_stacked=family_stat_price_range.plot(kind='bar',\n",
    "                                                    stacked=True,\n",
    "                                                    color=['teal', 'lightseagreen', 'khaki'],\n",
    "                                                    figsize=(12,10))\n",
    "plt.title('Family Status by Product Price Range', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('Product Price Range')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 973,
   "id": "6c8e5c11",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T23:47:34.136422Z",
     "start_time": "2022-11-08T23:47:34.055768Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar graph\n",
    "family_stat_price_range_stacked.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'stacked_family_stat_price_range.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f39c2a51",
   "metadata": {},
   "source": [
    "### 10. Basic Visualisation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08d83453",
   "metadata": {},
   "source": [
    "#### 10a. Departments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 610,
   "id": "88d180b7",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:43.599705Z",
     "start_time": "2022-11-08T18:24:41.574639Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'The Amount of Products Purchased')"
      ]
     },
     "execution_count": 610,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAApQAAAJkCAYAAACvXbElAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAACBD0lEQVR4nOzde3zO9f/H8ce1g42chiHnHDbHkcKGLBLR0OZc5tBK5BQ1ZyOnSA5FJeXbV5JTZuYUyTGHiVqSQ2Rk1IyxDbPDdX1+f/RzfVtDdNmu7fK8327dbrs+1+fw+nxe5LnP+3MwGYZhICIiIiLyLznZuwARERERydsUKEVERETEJgqUIiIiImITBUoRERERsYkCpYiIiIjYRIFSRERERGyiQCnyAJo7dy7e3t6Z/qtevTr16tWjVatWjBs3jl9//TXLcrGxsXh7e/Pqq6/+q+0eOnSIb7/99p5q3LJly33Z9j/59ttvOXTokPVzVFQU3t7eTJkyJVu290+ye3//6ua+/v2/OnXq0KxZMwYMGHDXfZN7s27dOs6ePWvvMkRs5mLvAkTEfp566ilq1KgBgMVi4erVqxw7dowVK1YQGRnJu+++y5NPPmmdv3DhwgwcOJDKlSvf87a2b99O//79GTFiBE2bNv3H+Rs2bMjAgQN55JFH7nlb9+qLL77gzTff5P3337dOK1u2LAMHDqRu3brZvv3conr16rRs2RIAwzC4fv06Z8+e5dtvv2XLli3079+f1157zb5FOpAZM2bwySefEBERYe9SRGymQCnyAGvZsiVBQUFZpu/YsYMBAwYwdOhQIiIiqFixIvBnoBw0aNC/2lZCQgIWi+Wu52/UqBGNGjX6V9u6V5cuXcoyrVy5cv96X/OqGjVq3HKfT58+TUhICB9++CFVq1YlICDADtU5nlv9uRPJqzTkLSJZ+Pv7M2TIEK5fv84HH3xg73LEzipVqsSsWbMwmUzMmTMHs9ls75JEJJdRoBSRW+rRowdubm5s3ryZjIwM4NbX9WVkZDBv3jzatWtH3bp1adiwISEhIezdu9c6z8iRIxk1ahQAb731Ft7e3sTGxlqv3fviiy8YNmwYPj4+NG3alIMHD2a5hvKvNm/eTLt27ahTpw6tW7fmo48+Ij09PdM83t7edOjQIcuy4eHheHt789///heA4OBg5s2bB8CAAQPw9vYGbn8NZUxMDG+88QaNGzemdu3atGzZkrfffpvk5ORM840cORJvb28SExMZP348TZo0oU6dOgQFBbFp06a76sHd7m+vXr3w9vbmzJkzWZaNiIjA29ublStX3tM2/65u3bo89thjnD17NtO1pgBnzpzJdEzatGlzy54EBwfTrFkzzp07R79+/Xj00Udp3LgxoaGhnD9/Pss2f/nlF0JDQ/H396d27drUr1+fbt26ZTl+N4/1oUOHaNu2LXXq1KFbt24YhkGLFi3o3bs3x48fJyQkhEcffZRGjRoRFhZGSkoKcXFxvPbaazz22GP4+fnxxhtvkJCQkKWWvXv30qdPHx577DHq1atH165d+eqrr7LM5+3tzciRI/n+++8JDg7m0UcfpUGDBrz22mvExsZa52vRogWrV68G4LnnnqNFixbW79atW0e3bt1o0KABjz76KB07duSLL75Ab0qW3EyBUkRuKX/+/NSsWZPr169z9OjR2843adIk5s6dS9GiRenRowfPPPMMP/74IyEhIURFRQF/Dq0/9dRTADRt2pSBAwdSuHBh6zref/99fvrpJ3r06EHNmjWpWbPmbbcXHR3NkCFDKF++PN27d8dkMjFr1iyGDx/+r/YzMDCQhg0bAtC2bVsGDhx423l//PFHgoKCWL9+PfXq1eOFF16gePHiLFy4kC5dunDlypUsy/Tp04ddu3bRpk0b2rVrx4kTJxgyZAgHDhy4q/ruZn+fe+45ANauXZtl+cjISPLly8czzzxzV9u7k8cffxyA77//3jrt559/pmPHjnz11Vf4+vrSu3dvihQpwqxZs+jfv3+Ws5k3btygZ8+exMTE0K1bN2rXrk1kZCTdunUjLi7OOt+hQ4fo3Lkz27dvp2nTpvTp04emTZvy008/MXjwYLZt25alvv79+1OhQgW6detGo0aNMJlMwJ+/CHXv3h3DMOjWrRuenp4sX76cESNG0L17d86fP0+XLl2oWLEia9euZdy4cZnWu3LlSvr06cPx48dp27YtXbt25dKlSwwZMoT58+dnqePnn3+mZ8+eODk50b17d7y9vdm4cSMhISHWyz569uxJ9erVAejatSs9e/YEYMOGDbz++utcvnyZwMBAunbtSlJSEm+++aZGCyR3M0TkgfPee+8ZXl5exqpVq+443+DBgw0vLy/jm2++MQzDMM6ePWt4eXkZ/fv3NwzD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KHfs2MHWrVtZtWoVq1ev5syZM1SuXBnAGiYBGjduTGRkJE2aNGHZsmWkpaUxduxYZs6cyerVq+nTpw/jxo2zzu/t7c2mTZsUJkVEROSB88Cdody3bx/PPvss+fP/eWd1x44diYiIyDJfy5YtAahatSoHDhzg9OnTnD17lv79+1vnuXr1qvVnHx8fm+ry9Cxk0/KSe6iXjkc9dTzqqeNRT+3rgQuUFosly7SMjIws01xc/jw0JpMJwzCwWCyUK1eONWvWAGA2m7l48aJ1fnd3d5vqio9Ptml5yR08PQuplw5GPXU86qnjUU+zn5OTieLFC97++xysJVfw9fVl/fr13Lhxg4yMDFatWoWvry/Ozs63DJY3Va5cmcTERA4cOADAqlWreOONN3KqbBEREZFc64E7Q9m8eXOOHj1Kx44dycjIoGnTpvTo0YODBw/SoUMHwsPDb7lcvnz5ePfdd5kyZQqpqakULFiQ6dOn53D1IiIiIrmPyTAMw95FPMjCFvozMWSHTtU7CA27OB711PGop45HPc1+GvIWERERkWylQGlnE0N2kJqWYu8yRERERP61B+4aytzm0qWrWCy66kBERETyLp2hFBERERGbKFCKiIiIiE0UKEVERETEJgqUIiIiImITBUoRERERsYkCpYiIiIjYRIFSRERERGyiQCkiIiIiNlGgFBERERGbKFCKiIiIiE0UKEVERETEJnqXt50VL17Q+nNqWgpJiRl2rEZERETk3ilQ2lnYQn8Sks4BMG/oSSDZvgWJiIiI3CMNeYuIiIiITR6YQNmhQ4d7XmbMmDH89NNP2VCNiIiIiON4YIa816xZc8/LTJkyJRsqEREREXEsDhEoo6KimD9/Pq6ursTGxtKiRQsKFCjAli1bAFiwYAFNmjTh+PHj7N27lxkzZgBQpEgRZs6cSb58+Rg2bBgXL14EYMCAATz11FMEBwczcOBAAD766CPc3d359ddf8fb25p133iFfvnx89tlnfP755xQqVIjKlStToUIFBg0aZJ8DISIiImIHDhEoAX788UfWr19P0aJFady4MSNGjCA8PJxRo0axfv1663wffPABEyZMwMfHh48//pgjR44QHx9P2bJlWbBgAUePHiUyMpKnnnoq0/p/+OEHNm7cSMmSJenSpQvffvstZcqUYcmSJYSHh+Pq6kpwcDAVKlSwaT88PQvZ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/PJL4M87q7///nvq1auHn58fa9asAeDQoUP89ttvALz22mv89NNPdOvWjSFDhnDkyJEsNaakpLB161YAwsPDadasGadPn8ZkMtGvXz8aNWrE119/jdlsJiEhgbZt2+Ll5cWQIUNo0qQJx48fx9nZmYyMPx/mvXfvXtq0aUPHjh0pXLgwUVFRmM3mfzjkIiIiIo7ljkPeLVu25KeffiIgIIASJUpQpUqV28772GOPYTKZ6NixY5bv8uXLx9tvv82IESNwcnLikUcesZ7hnDFjBhMmTGDu3Lm4uroyd+5c8uXLx5gxYwgLC7M+pmjy5MmULFmSwYMHM3LkSJ599lkqV65sHfLu168fY8aM4f3338fV1ZUJEybcss6vvvqK2bNnU7JkSaZPn46Hhwc1atSgTZs2mEwmmjZtysGDBylWrBhdu3alU6dO5M+fn0ceeYSOHTuSmppKcnIyoaGhvPTSS7zxxhusX78eV1dX6tevn6OPMBIRERHJDUzGfRijNQyDX375hREjRhAREZHle4vFwjvvvMPAgQMpUKAAn376KXFxcYwcOdLWTd8Tb29v61nS3CKvvylH16xkput4HI966njUU8ejnma/f7qG8r68enHRokV88sknvPvuu7cpwomiRYvSqVMnXF1dKVu2LFOmTLkfmxYRERERO7svZyjlwZSalkJSYoa9y8hV9Fuy41FPHY966njU0+yXI2co5d+7dOkqFosyvYiIiORdevWiiIiIiNhEgVJEREREbKJAKSIiIiI2UaAUEREREZsoUIqIiIiITRQoRURERMQmCpQiIiIiYhMFShERERGxiQKliIiIiNhEgVJEREREbKJAKSIiIiI20bu87exOL1p3JKlpKSQlZti7DBEREckGCpR2FrbQn4Skc/YuI9vNG3oSSLZ3GSIiIpINNOQtIiIiIjZRoPwHI0eOJDw8/Lbfe3t7A7B06VKWLl2aU2WJiIiI5Boa8r5Punfvbu8SREREROxCgfJvDMNg2rRpbN++nZIlS2I2m2nYsCEREREsWrQIi8VCrVq1GD9+PG5ubtbl5s6dC8CgQYPsVbqIiIiIXShQ/s2mTZs4cuQI69atIzk5mfbt25OSksL69etZtmwZbm5uzJw5k4ULF/Lqq6/au9w8xdOzkL1LyBEPyn4+SNRTx6OeOh711L4UKP9m//79tGrVCldXV4oV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LcupU6dyfqdFRERE7Mjh7vL28/Nj0KBBHD16FH9/f3r06MGSJUt44oknAKhWrRqbN28GYMaMGWzbto2vvvqKH3/8kWvXrgHw3XffMWvWLAD8/f3x9/cnNjaWy5cvM2jQIAYNGkSJEiUAaN68Od27d6dly5a0bt2aGjVq2GGvRWyT1x51lNN0fByPeup41FP7crhA+dhjj7F+/Xq2b9/Ohg0bWL16NQBubm4AmEwm67zPP/88jRo1olGjRvj5+fHGG28A4OLyv8NiGAa//vor7u7umEwm3n//fd544w2effZZSpUqxdixYzl27Bg7duwgNDSUgQMH0qFDhxzcYxHbxcfrsUG34+lZSMfHwainjkc9zX5OTqY7Pjvb4Ya83377bSIjIwkMDCQsLIwjR47ccr4rV65w+vRphgwZQrNmzfjmm28wm80APP7446xfvx6APXv2MG7cOODPYXM/Pz+6d+/O5MmTycjIoFWrVnh4ePDKK6/QoUMHjh49mjM7KiIiIpJLONwZyuDgYF5//XXCw8NxdnZm+vTpTJw4Mct8RYsWtd6k4+Ligq+vLzdu3OD69euEhYUxduxYvvjiC/Lnz8/kyZMzLdu3b1/at2/P9u3bGTx4MC+++CJubm4UL16cadOm5dSuioiIiOQKJsMwDHsX8SDTm3LE3uYNPamhojvQUJrjUU8dj3qa/R64IW8RERERyVkON+Sd10wM2WHvEuQBl5qWYu8SREQkj1OgtLNLl65iseiqA0ehYRcREXkQachbRERERGyiQCkiIiIiNlGgFBERERGbKFCKiIiIiE0UKEVERETEJgqUIiIiImITBUoRERERsYkCpYiIiIjYRIFSRERERGyiQCkiIiIiNlGgFBERERGb6F3edla8eEF7lyD3madnIXuXIPeZeppZaloKSYkZ9i5DRHIRBUo7C1voT0LSOXuXISJy1+YNPQkk27sMEclFNOQtIiIiIjbJ1YFy5MiRhIeH33GeDh065FA1IiIiInIruTpQ3o01a9bYuwQRERGRB1quuobSMAymTZvG9u3bKVmyJGazmYYNGwIwe/Zs9u7dS2JiIiVLlmT27NmUKFECb29vjh8/zty5c4mOjub333+ne/fuLFy4kK1bt+Lk5ERUVBQff/wxn3zySabtLViwgI0bN2I2m2natCmhoaGYTCY+++wzPv/8cwoVKkTl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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a bar chart for orders made in each department\n",
    "department_bar=df_high_activity['department'].value_counts().plot(kind='barh', color=['olivedrab'], figsize=(10,10))\n",
    "plt.title('Distribution by Deparments', fontsize=20)\n",
    "plt.legend(loc='upper center', ncol=3)\n",
    "plt.xlabel('The Amount of Products Purchased')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 611,
   "id": "73724fcf",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:43.678894Z",
     "start_time": "2022-11-08T18:24:43.601989Z"
    }
   },
   "outputs": [],
   "source": [
    "# export bar chart\n",
    "department_bar.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'bar_departments.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee111445",
   "metadata": {},
   "source": [
    "#### 10b. Product Price Ranges"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 998,
   "id": "6ab0e701",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:38:25.431526Z",
     "start_time": "2022-11-09T00:38:22.155652Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create pie chart for product price range distribution\n",
    "price_pie=df_high_activity['price_range_loc'].value_counts().plot.pie(shadow=True,\n",
    "                                                            startangle=90,\n",
    "                                                            autopct=('%1.f%%'),\n",
    "                                                            colors=['steelblue', 'Sienna', 'paleturquoise'],\n",
    "                                                            label='')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 999,
   "id": "9d599f3b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:38:29.253334Z",
     "start_time": "2022-11-09T00:38:29.212445Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "price_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_price_range.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d5831b00",
   "metadata": {},
   "source": [
    "#### 10c. Customer Loyalty"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 614,
   "id": "30503fce",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:45.930613Z",
     "start_time": "2022-11-08T18:24:45.917813Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Regular customer    76864\n",
       "New customer        68750\n",
       "Loyal customer      17017\n",
       "Name: loyalty_flag, dtype: int64"
      ]
     },
     "execution_count": 614,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_unique_customers['loyalty_flag'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 996,
   "id": "33cb3f44",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:38:11.877304Z",
     "start_time": "2022-11-09T00:38:11.763070Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create pie chart for customer loyalty distribution\n",
    "loyalty_pie=df_unique_customers['loyalty_flag'].value_counts().plot.pie(shadow=True,\n",
    "                                                            startangle=100,\n",
    "                                                            autopct=('%1.f%%'),\n",
    "                                                            colors=['teal', 'lightskyblue', 'powderblue'],\n",
    "                                                            label='')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 997,
   "id": "139d51fe",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:38:15.597754Z",
     "start_time": "2022-11-09T00:38:15.556348Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "loyalty_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_loyalty_to_brand.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad2b0233",
   "metadata": {},
   "source": [
    "#### 10d. Customer Spending"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 994,
   "id": "3340f702",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:37:56.444872Z",
     "start_time": "2022-11-09T00:37:55.249819Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "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+fl4+umnUVZWhjfeeAPLly8H0BeQr7/+OsrKyvDlL38ZH3zwAZ588kncc889WL58Odra2vCZz3wG69atAwBUVFTgpZdegsfjwYoVK/DQQw/h73//OwBgw4YNOHv2LO644w4AwPbt23Hy5Em8+uqrEAQBa9aswRtvvIGZM2eitrYWzzzzDAoKCobvwSSi68YQpGG1d+9erFq1ClarFQBwzz33YN26dXj88cfx1a9+FV6vFwBQWlqKU6dOYfv27RdcW5w+fTqeeuopuFwuLFmyBI888kj/x+6//34AwPjx45GZmYmKigrs3r0bNTU1+PWvfw2g7+y9hoYGAMDcuXNhMpmQnp4Op9MJj8eD/fv344EHHgAAFBUVYfr06QCAPXv24Pjx47j77rsBAMFgEHl5eZg5cybS09MZgEQJiCFIw0qW5Qtui0ajyM3NhSzLeO+99zBjxgxkZGRg7969OHXqVH8InVNUVIQNGzZgx44d2LJlC5599lm88847AABJkgb8LIPBAFmW8fzzz8PpdAIA2trakJ6ejs2bN8N83sGy584MPPfnOedOW4/FYvjc5z6HL3zhCwAAt9sNSZLQ3d0Ni8UyOA8QEQ0rLoyhYTVv3jy8/fbbCAaDiEajWLt2LebNmwcAWLRoEX7/+99jzpw5mDdvHl588UVMnTp1QLABwJ///Gf85je/wa233oof/vCH6Orq6h9BngvDEydOwO12Y+zYsZg3bx7+8pe/AACqqqpw++23IxAIXLLGG264AW+++SZkWUZTUxMOHz7cX/v69evh8/kQjUbxyCOP4N133x30x4iIhg9HgjRkDh48OGAUd/vtt+PHP/4xysrKcM899yAajWLBggX47Gc/CwBYsmQJnnvuOcycORM2mw2RSARLly694Pvedddd+Na3voXbb78dkiRhzZo1sNvtAICGhgasXr0aAPDLX/4SkiThiSeewA9+8APcfvvtAICf//znSE5OvmTdn/nMZ3DmzBnceuutyM/Px9ixYwEAy5YtQ3l5Oe6//37EYjEsXLgQq1evRlNT0+A8YEQ07HieIGnGww8/jEcffRRz585VuxQiShCcDiUiIt3iSJCIiHSLI0EiItIthiAREekWQ5CIiHSLIUhERLrFECQiIt1iCBIRkW4xBImISLcYgkREpFsMQSIi0i2GIBER6RZDkIiIdIshSEREusUQJCIi3WIIEhGRbjEEiYhItxiCRESkWwxBIiLSLYYgERHpFkOQiIh0iyFIRES6xRAkIiLdYggSEZFuMQSJiEi3GIJERKRbDEEiItIthiAREekWQ5CIiHTr/wNQ/CYnU4ApHwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 720x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create pie chart for customer spending distribution\n",
    "customer_pie=df_high_activity['spender_flag'].value_counts().plot.pie(shadow=True,\n",
    "                                                            startangle=90,\n",
    "                                                            autopct=('%1.f%%'),\n",
    "                                                            colors=['steelblue', 'skyblue'],\n",
    "                                                            label='')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 995,
   "id": "c6c15694",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T00:38:03.365308Z",
     "start_time": "2022-11-09T00:38:03.324538Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "customer_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_customer_spending.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "514eaa17",
   "metadata": {},
   "source": [
    "#### 10e. Order Frequency "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 619,
   "id": "59f733aa",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:49.728596Z",
     "start_time": "2022-11-08T18:24:47.916897Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create pie chart for order frequency distribution\n",
    "order_freq_pie=df_high_activity['frequency_flag'].value_counts().plot.pie(shadow=True,\n",
    "                                                                     startangle=90,\n",
    "                                                                     autopct=('%1.f%%'),\n",
    "                                                                     colors=['bisque', 'tan', 'darkorange'],\n",
    "                                                                     label='')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 620,
   "id": "a647302b",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-08T18:24:49.773222Z",
     "start_time": "2022-11-08T18:24:49.730897Z"
    }
   },
   "outputs": [],
   "source": [
    "# export pie chart\n",
    "order_freq_pie.figure.savefig(os.path.join(path, '04 Analysis', 'Visualizations', 'pie_order_frequency.png'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d95a6e38",
   "metadata": {},
   "source": [
    "### 11. Exporting Final Dataset¶"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1000,
   "id": "839aed23",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T01:32:10.370785Z",
     "start_time": "2022-11-09T01:30:53.963594Z"
    }
   },
   "outputs": [],
   "source": [
    "# export final dataset of active customers\n",
    "df_high_activity.to_pickle(os.path.join(path, '02 Data', 'Prepared Data', 'final_instacart_data.pkl'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1001,
   "id": "8ca0ea22",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-09T01:32:11.225046Z",
     "start_time": "2022-11-09T01:32:10.548687Z"
    }
   },
   "outputs": [],
   "source": [
    "# export final dataset of unique customers\n",
    "df_unique_customers.to_pickle(os.path.join(path, '02 Data', 'Prepared Data', 'unique_customers_dataset.pkl'))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
